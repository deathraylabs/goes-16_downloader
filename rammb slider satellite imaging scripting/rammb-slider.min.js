function decodeEntities(e) {
	var t = document.createElement("textarea");
	return t.innerHTML = e, t.value
}

function calculateDistanceBetweenXYs(e, t, r, o) {
	return Math.sqrt(Math.pow(r - e, 2) + Math.pow(o - t, 2))
}

function setDefaultsForSatellite() {
	url_parameters.sec = json.satellites[url_parameters.sat].default_sector;
	var e = json.satellites[url_parameters.sat].products,
		t = json.satellites[url_parameters.sat].sectors[url_parameters.sec].missing_products;
	(!url_parameters.p || !e[url_parameters.p[0]] || t && t[url_parameters.p[0]]) && (url_parameters.p = {
		0: json.satellites[url_parameters.sat].sectors[url_parameters.sec].default_product
	});
	var r = json.satellites[url_parameters.sat].sectors[url_parameters.sec].tile_size * Math.pow(2, json.satellites[url_parameters.sat].sectors[url_parameters.sec].max_zoom_level) / 2;
	url_parameters.x = r, url_parameters.y = r
}

function convertProductNumberToName(e, t) {
	return {
		"goes-16": ["band_01", "band_02", "band_03", "band_04", "band_05", "band_06", "band_07", "band_08", "band_09", "band_10", "band_11", "band_12", "band_13", "band_14", "band_15", "band_16", "geocolor", "natural_color", "rgb_air_mass", "awips_dust", "fire_temperature", "shortwave_albedo_cira", "cloud_geometric_thickness_cira_clavr-x", "cloud_layers_cira_clavr-x", "cloud_top_height_cira_clavr-x", "cira_snow-cloud_discriminator_rgb", "cira_natural_fire_color", "eumetsat_ash", "cloud_optical_thickness_cira_clavr-x", "cloud_effective_radius_cira_clavr-x", "jma_day_cloud_phase_distinction_rgb", "cira_glm_l2_group_energy", "cira_glm_l2_group_counts", "cira_cloud_snow_discriminator", "cira_high_low_cloud_and_snow", "split_window_difference_10_3-12_3", "cira_dust_debra_original_cloud_mask", "mrms_merged_base_reflectivity_qc", "mrms_reflectivity_at_lowest_altitude", "mrms_radar_precipitation_accumulation_01-hour", "mrms_lightning_probability_0-30-min_nldn", "mrms_cg_lightning_density_5-min_nldn", "mrms_precip_flag", "mrms_radar_precipitation_rate", "cira_dust_debra_cloud_cleared_background", "cira_dust_debra_clavr-x_cloud_mask", "eumetsat_dust", "cira_proxy_visible", "cira_low_cloud_night", "cira_low_cloud_night_cloud_cleared_background"],
		"goes-17": ["band_01", "band_02", "band_03", "band_04", "band_05", "band_06", "band_07", "band_08", "band_09", "band_10", "band_11", "band_12", "band_13", "band_14", "band_15", "band_16", "geocolor", "natural_color", "rgb_air_mass", "awips_dust", "fire_temperature", "shortwave_albedo_cira", "cloud_geometric_thickness_cira_clavr-x", "cloud_layers_cira_clavr-x", "cloud_top_height_cira_clavr-x", "cira_snow-cloud_discriminator_rgb", "cira_natural_fire_color", "eumetsat_ash", "cloud_optical_thickness_cira_clavr-x", "cloud_effective_radius_cira_clavr-x", "jma_day_cloud_phase_distinction_rgb", "cira_glm_l2_group_energy", "cira_glm_l2_group_counts", "cira_cloud_snow_discriminator", "cira_high_low_cloud_and_snow"],
		himawari: ["band_01", "band_02", "band_03", "band_04", "band_05", "band_06", "band_07", "band_08", "band_09", "band_10", "band_11", "band_12", "band_13", "band_14", "band_15", "band_16", "geocolor", "natural_color", "rgb_air_mass", "eumetsat_dust", "fire_temperature", "eumetsat_ash", "cloud_geometric_thickness_cira_clavr-x", "cloud_layers_cira_clavr-x", "cloud_top_height_cira_clavr-x", "cloud_optical_thickness_cira_clavr-x", "cloud_effective_radius_cira_clavr-x", "cira_natural_fire_color", "shortwave_albedo_cira", "visible_albedo_cira", "cira_dust_debra_original_cloud_mask"],
		jpss: ["day_night_band", "band_m01", "band_m02", "band_m03", "band_m04", "band_m05", "band_m06", "band_m07", "band_m08", "band_m09", "band_m10", "band_m11", "band_m12", "band_m13", "band_m14", "band_m15", "band_m16", "band_i01", "band_i02", "band_i03", "band_i04", "band_i05", "cira_geocolor", "cloud_geometric_thickness_cira_clavr-x", "cloud_top_height_cira_clavr-x", "cloud_optical_thickness_cira_clavr-x", "cloud_effective_radius_cira_clavr-x", "cloud_top_altitude_cira_clavr-x", "cloud_base_altitude_cira_clavr-x", "cloud_phase_cira_clavr-x", "eumetsat_natural_color"]
	}[e][t]
}

function checkForProductNumbers() {
	$.each(url_parameters.p, function(e, t) {
		productValue = parseInt(t), isNaN(productValue) || (url_parameters.p[e] = convertProductNumberToName(url_parameters.sat, productValue))
	})
}

function validateUrlParameters() {
	return $.each(url_parameters, function(e, t) {
		-1 === $.inArray(e, ["sat", "sec", "x", "y", "z", "angle", "im", "ts", "st", "et", "speed", "motion", "map", "maps", "mops", "mhidden", "lat", "p", "opacity", "hidden", "pause", "slider", "hide_controls", "mouse_draw", "s", "follow_feature", "follow_x", "follow_y", "follow_hide"]) && delete url_parameters[e]
	}), json ? json.satellites[url_parameters.sat] ? json.satellites[url_parameters.sat].sectors[url_parameters.sec] || (url_parameters.sec || alert("Sector not found, so displaying default sector and product for this satellite."), setDefaultsForSatellite()) : (alert("Satellite not found, so displaying default satellite, sector, and product."), url_parameters.sat = json.default_satellite, setDefaultsForSatellite()) : alert("Config file not loaded."), updateURL(), $.each(["x", "y"], function(e, t) {
		url_parameters[t] = parseFloat(url_parameters[t])
	}), $.each(["z", "im", "ts", "st", "et", "speed", "lat", "pause", "slider", "hide_controls", "mouse_draw", "follow_feature", "follow_hide"], function(e, t) {
		url_parameters[t] = parseInt(url_parameters[t])
	}), checkForProductNumbers(), $.each(url_parameters.opacity, function(e, t) {
		url_parameters.opacity[e] = parseFloat(t)
	}), $.each(url_parameters.hidden, function(e, t) {
		url_parameters.hidden[e] = parseInt(t)
	}), $.each(["p", "opacity", "hidden"], function(e, t) {
		url_parameters[t].length && delete url_parameters[t].length
	}), -1 == $.inArray(url_parameters.motion, ["loop", "rock", "rev"]) && (url_parameters.motion = "loop"), -1 == $.inArray(url_parameters.s, ["rammb-slider", "rammb-slider2"]) && (url_parameters.s = "rammb-slider"), $.each(url_parameters.follow_x, function(e, t) {
		url_parameters.follow_x[e] = parseFloat(t)
	}), $.each(url_parameters.follow_y, function(e, t) {
		url_parameters.follow_y[e] = parseFloat(t)
	}), url_parameters
}

function getProductsObject() {
	var e = json.satellites[url_parameters.sat].products,
		t = json.satellites[url_parameters.sat].sectors[url_parameters.sec].products;
	void 0 !== t && $.extend(!0, e, t);
	var r = json.satellites[url_parameters.sat].sectors[url_parameters.sec].missing_products;
	return void 0 !== r && $.each(r, function(t, r) {
		r in e && delete e[r]
	}), e
}
getQueryStringAsObject = function() {
	var e, t, r, o, a, l, i, s = {},
		n = function(e) {
			return decodeURIComponent(e).replace(/\+/g, " ")
		},
		c = decodeURI(window.location.search.substring(1)),
		u = /([^&;=]+)=?([^&;]*)/g;
	for (a = function(e) {
			return "object" != typeof e && (t = e, e = {}, t && Array.prototype.push.call(e, t)), e
		}; r = u.exec(c);) e = r[1].indexOf("["), i = n(r[2]), e < 0 ? s[o = n(r[1])] ? (s[o] = a(s[o]), Array.prototype.push.call(s[o], i)) : s[o] = i : (o = n(r[1].slice(0, e)), l = n(r[1].slice(e + 1, r[1].indexOf("]", e))), s[o] = a(s[o]), l ? s[o][l] = i : Array.prototype.push.call(s[o], i));
	return s
};
var default_satellite = getQueryStringAsObject().sat || json.default_satellite,
	url_parameters = {
		sat: default_satellite,
		z: 0,
		angle: 0,
		im: 12,
		ts: 1,
		st: 0,
		et: 0,
		speed: 130,
		motion: "loop",
		maps: {},
		mops: {},
		mhidden: {},
		lat: 0,
		opacity: {
			0: 1
		},
		hidden: {
			0: 0
		},
		pause: 0,
		slider: -1,
		hide_controls: 0,
		mouse_draw: 0,
		follow_feature: 0,
		follow_x: {},
		follow_y: {},
		follow_hide: 0,
		s: "rammb-slider"
	},
	debug_on = !1;
setDefaultsForSatellite(), $.extend(url_parameters, getQueryStringAsObject()), url_parameters = validateUrlParameters();
var sector_array = json.satellites[url_parameters.sat].sectors[url_parameters.sec],
	productsObject = getProductsObject(),
	minutes_between_images = findProperty("minutes_between_images", url_parameters.sat, url_parameters.sec, url_parameters.p[0]),
	$zoom_holder = $("#zoom_holder");

function defaultFor(e, t) {
	return void 0 !== e ? e : t
}

function blurObject(e) {
	$("#" + e.id + "-button").length ? $("#" + e.id + "-button").blur() : $("#" + e.id).blur()
}
$zoom_holder.width(sector_array.tile_size), $zoom_holder.height(sector_array.tile_size);
var recoupLeft, recoupTop, serverCheck01 = ".",
	serverCheck02 = "c",
	serverCheck03 = "i",
	serverCheck04 = "r",
	serverCheck05 = "a",
	serverCheck06 = ".",
	serverCheck07 = "c",
	serverCheck08 = "o",
	serverCheck09 = "l",
	serverCheck10 = "o",
	serverCheck11 = "s",
	serverCheck12 = "t",
	serverCheck13 = "a",
	serverCheck14 = "t",
	serverCheck15 = "e",
	serverCheck16 = ".",
	serverCheck17 = "e",
	serverCheck18 = "d",
	serverCheck19 = "u",
	serverCheckNoaa01 = ".",
	serverCheckNoaa02 = "n",
	serverCheckNoaa03 = "e",
	serverCheckNoaa04 = "s",
	serverCheckNoaa05 = "d",
	serverCheckNoaa06 = "i",
	serverCheckNoaa07 = "s",
	serverCheckNoaa08 = ".",
	serverCheckNoaa09 = "n",
	serverCheckNoaa10 = "o",
	serverCheckNoaa11 = "a",
	serverCheckNoaa12 = "a",
	serverCheckNoaa13 = ".",
	serverCheckNoaa14 = "g",
	serverCheckNoaa15 = "o",
	serverCheckNoaa16 = "v";
if (-1 !== location.hostname.indexOf(serverCheck01 + serverCheck02 + serverCheck03 + serverCheck04 + serverCheck05 + serverCheck06 + serverCheck07 + serverCheck08 + serverCheck09 + serverCheck10 + serverCheck11 + serverCheck12 + serverCheck13 + serverCheck14 + serverCheck15 + serverCheck16 + serverCheck17 + serverCheck18 + serverCheck19) || -1 !== location.hostname.indexOf(serverCheckNoaa01 + serverCheckNoaa02 + serverCheckNoaa03 + serverCheckNoaa04 + serverCheckNoaa05 + serverCheckNoaa06 + serverCheckNoaa07 + serverCheckNoaa08 + serverCheckNoaa09 + serverCheckNoaa10 + serverCheckNoaa11 + serverCheckNoaa12 + serverCheckNoaa13 + serverCheckNoaa14 + serverCheckNoaa15 + serverCheckNoaa16) || -1 !== location.hostname.indexOf("localhost")) {
	function updateDynamicUrlValues() {
		url_parameters.pause = -1 !== loopingIndex ? all_tiles[0][3][loopingIndex] : all_tiles[0][3][all_tiles[0][3].length - 1], followXVector && followYVector && (xy = getCurrentImageryXY(), url_parameters.x = xy.x, url_parameters.y = xy.y)
	}

	function convertTimestampToDisplayTime(e) {
		var t;
		return t = e.toString(), $.isNumeric(t) ? 14 == t.length ? t.substr(0, 4) + "-" + t.substr(4, 2) + "-" + t.substr(6, 2) + " " + t.substr(8, 2) + ":" + t.substr(10, 2) + ":" + t.substr(12, 2) + " UTC" : 12 == t.length ? t.substr(0, 4) + "-" + t.substr(4, 2) + "-" + t.substr(6, 2) + " " + t.substr(8, 2) + ":" + t.substr(10, 2) + " UTC" : 8 == t.length ? t.substr(0, 4) + "-" + t.substr(4, 2) + "-" + t.substr(6, 2) : 6 == t.length ? t.substr(0, 2) + ":" + t.substr(2, 2) + ":" + t.substr(4, 2) + " UTC" : t : t
	}

	function leadingZeros(e, t, r) {
		for (r = void 0 === r ? "0" : r + "", e += ""; e.length < t;) e = r + e;
		return e
	}

	function convertBigPixelsToScreenPixels(e, t = current_zoom_level) {
		return e / Math.pow(2, max_zoom_level - t)
	}

	function convertScreenPixelsToBigPixels(e, t = current_zoom_level) {
		return e * Math.pow(2, max_zoom_level - t)
	}

	function calculateFirstLastImagePosition(e, t, r, o, a, l, i) {
		var s = Math.abs(l - a) + 1,
			n = Math.round(calculateFollowStep(e, r, s)),
			c = Math.round(calculateFollowStep(t, o, s));
		return {
			x0: e + n * (0 - a),
			y0: t + c * (0 - a),
			x1: r + n * (i - l - 1),
			y1: o + c * (i - l - 1)
		}
	}

	function isFollowBoxPositionUnique(e) {
		return returnValue = !0, passedFollowBoxPosition = e.position(), $otherFollowBoxes = $(".followBox").not(e), $otherFollowBoxes.each(function(t, r) {
			valuePosition = $(r).position(), passedFollowBoxPosition.top == valuePosition.top && passedFollowBoxPosition.left == valuePosition.left && (returnValue = "Please move your cursor to another position. Another feature-following box already exists in this position for another image."), e.attr("data-recent-image-number") == $(r).attr("data-recent-image-number") && (returnValue = "Please move to another image/timestamp. A feature-following box already exists for this image/timestamp.")
		}), $otherFollowBoxes.length > 1 && (returnValue = 'This would create more than two feature-following boxes, and only two are supported. Please click the "Clear" button to start over.'), returnValue
	}

	function displayFollowBox(e, t, r, o) {
		o = defaultFor(o, getAbsoluteLoopingIndex());
		var a = $("<div id='followBox" + leadingZeros(r, 2) + "' class='followBox' title='Drag this box around the feature you want to follow to adjust the start/end position, centering the feature in the box.' style='left: " + (e - 11) + "px; top: " + (t - 11) + "px; width: 20px; height: 20px; border-width: 1px;'></div>");
		return a.attr("data-follow-box-number", r), a.attr("data-recent-image-number", o), $zoom_holder.append(a), isFollowBoxPositionUniqueReturnValue = isFollowBoxPositionUnique(a), !0 !== isFollowBoxPositionUniqueReturnValue ? (a.remove(), alert(isFollowBoxPositionUniqueReturnValue), !1) : ($(".followBox").draggable({
			start: function(e, t) {
				stopLoop(), $(".followBox").not($(this)).each(function(t, r) {
					getAbsoluteLoopingIndex() == $(this).attr("data-recent-image-number") && (e.preventDefault(), alert("Please move to another image/timestamp to drag this feature-following box. A feature-following box already exists for this image/timestamp."))
				})
			},
			revert: function() {
				return isFollowBoxPositionUniqueReturnValue = isFollowBoxPositionUnique($(this)), !0 !== isFollowBoxPositionUniqueReturnValue && (alert(isFollowBoxPositionUniqueReturnValue), followBoxRevert = !0, !0)
			},
			stop: function(e, t) {
				if (0 == followBoxRevert) {
					var r = $(this).attr("data-recent-image-number");
					delete url_parameters.follow_x[r], delete url_parameters.follow_y[r];
					var o = getAbsoluteLoopingIndex();
					$(this).attr("data-recent-image-number", o), url_parameters.follow_x[o] = convertScreenPixelsToBigPixels($(this).position().left + $(this).outerWidth() / 2), url_parameters.follow_y[o] = convertScreenPixelsToBigPixels($(this).position().top + $(this).outerHeight() / 2), updateURL(), drawFollowVector(), setFollowVectors()
				}
				followBoxRevert = !1
			}
		}), !0)
	}

	function appendFollowGraphicsWrapper() {
		0 == $("div#followGraphicsWrapper").length && $zoom_holder.append("<div id='followGraphicsWrapper'></div>")
	}

	function getOrderedFollowValues(e) {
		var t = [],
			r = [],
			o = 0;
		return Object.keys(e).sort(function(e, t) {
			return e - t
		}).forEach(function(a) {
			t[o] = a, r[o] = e[a], o++
		}), {
			imageNumbers: t,
			followValues: r
		}
	}

	function calculateFollowVector(e) {
		var t = getOrderedFollowValues(e);
		return convertBigPixelsToScreenPixels((t.followValues[1] - t.followValues[0]) / (t.imageNumbers[1] - t.imageNumbers[0]))
	}

	function setFollowVectors() {
		2 !== Object.keys(url_parameters.follow_x).length || 2 !== Object.keys(url_parameters.follow_y).length ? (followXVector = 0, followYVector = 0) : (followXVector = calculateFollowVector(url_parameters.follow_x), followYVector = calculateFollowVector(url_parameters.follow_y))
	}

	function getAbsoluteLoopingIndex() {
		return -1 === loopingIndex ? loopingIndexMax : loopingIndex
	}

	function createArray(e) {
		var t = new Array(e || 0),
			r = e;
		if (arguments.length > 1)
			for (var o = Array.prototype.slice.call(arguments, 1); r--;) t[e - 1 - r] = createArray.apply(this, o);
		return t
	}
	var product_setup_info = createArray(3, 9)
}

function initializeTileFilenamesArray() {
	for (var e = 0; e <= max_zoom_level; e++) {
		var t = Math.pow(2, e) - 1,
			o = leadingZeros(e, 2);
		for (r = 0; r <= t; r++)
			for (c = 0; c <= t; c++) {
				var a = leadingZeros(r, 3),
					l = leadingZeros(c, 3);
				tile_filenames[e][r][c][0] = o + "/" + a + "_" + l, tile_filenames[e][r][c][1] = ".z" + o + ".r" + a + ".c" + l, tile_filenames[e][r][c][2] = " z" + o + " r" + a + " c" + l
			}
	}
}

function addProductToTileArray(e, t, o, a, l, i, s, n, u, d) {
	var m = createArray(9, t + 1, Math.pow(2, t), Math.pow(2, t), 2);
	p = e;
	for (var _ = 0; _ <= t; _++) {
		var h = Math.pow(2, _) - 1;
		leadingZeros(_, 2);
		for (r = 0; r <= h; r++)
			for (c = 0; c <= h; c++) {
				leadingZeros(r, 3), leadingZeros(c, 3);
				m[0][_][r][c][0] = !1, m[0][_][r][c][1] = !1, m[0][_][r][c][2] = !1
			}
	}
	m[1] = o, m[2] = a, m[3] = l, m[4] = i, m[5] = s;
	var f = [];
	$.each(l, function(e, t) {
		f.push(convertTimestampToDisplayTime(t))
	}), m[6] = f, m[7] = n, m[8] = u, m[9] = d, all_tiles.push(m)
}

function addMapLatLonToTileArray(e, t, o, a, l, i, s) {
	for (var n = createArray(5, t + 1, Math.pow(2, t), Math.pow(2, t), 2), u = 0; u <= t; u++) {
		var p = Math.pow(2, u) - 1;
		leadingZeros(u, 2);
		for (r = 0; r <= p; r++)
			for (c = 0; c <= p; c++) {
				leadingZeros(r, 3), leadingZeros(c, 3);
				n[0][u][r][c][0] = !1, n[0][u][r][c][1] = !1
			}
	}
	n[1] = o, n[2] = a, n[3] = l, n[4] = i, n[5] = s, map_lat_lon_tiles[e] = n
}

function swapSelectOptions(e, t) {
	var r, o, a, l;
	a = e.val(), l = t.val(), r = e.find("option:gt( 1 )").remove(), o = t.find("option:gt( 1 )").remove(), r.appendTo(t), o.appendTo(e), e.val(l).selectmenu("refresh"), t.val(a).selectmenu("refresh")
}

function reverseTimesIfBackwards() {
	if (0 != url_parameters.st && 0 != url_parameters.et && url_parameters.st > url_parameters.et) {
		var e = url_parameters.st;
		url_parameters.st = url_parameters.et, url_parameters.et = e, updateURL();
		var t = $("#startDateSelector"),
			r = $("#endDateSelector"),
			o = $("#startHourSelector"),
			a = $("#endHourSelector"),
			l = $("#startTimeSelector"),
			i = $("#endTimeSelector");
		t.length && r.length && swapSelectOptions(t, r), o.length && a.length && swapSelectOptions(o, a), l.length && i.length && swapSelectOptions(l, i)
	}
}

function updateDateSelects(e) {
	var t = $("#startDateSelector"),
		r = $("#endDateSelector");
	$.each(e, function(e, o) {
		t.append("<option value='" + o + "'>" + convertTimestampToDisplayTime(o) + "</option>"), r.append("<option value='" + o + "'>" + convertTimestampToDisplayTime(o) + "</option>")
	}), t.selectmenu("refresh"), r.selectmenu("refresh")
}

function getTimestampedMapsCartopy(e) {
	var t = json.satellites[url_parameters.sat].sectors[url_parameters.sec].missing_maps;
	$.each(url_parameters.maps, function(r, o) {
		t && -1 != $.inArray(r, t) || "borders" == r && "off" == o || $.ajax({
			type: "GET",
			url: server_root_maps + "json/" + url_parameters.sat + "/" + url_parameters.sec + "/maps/" + r + "/" + o + "/latest_times_all.json",
			dataType: "json",
			success: function(t) {
				var a = $("#holder-" + r);
				t.timestamps_int.sort(function(e, t) {
					return t - e
				}), map_time = t.timestamps_int[t.timestamps_int.length - 1], $.each(t.timestamps_int, function(t, r) {
					if (r <= e) return map_time = r, !1
				}), a.length && a.remove(), addMapLatLonToTileArray(r, max_zoom_level, server_root_maps + "maps/" + url_parameters.sat + "/" + url_parameters.sec + "/" + r + "/" + o + "/", ".png", [map_time], !1, 1), map_lat_lon_tiles[r][4] = !0, a.show(), $("#mapSelector option[ value='" + r + "']").prop("disabled", !0), $("#mapSelector").selectmenu("refresh"), appendTiles(current_zoom_level, url_parameters.x, url_parameters.y)
			},
			error: function() {
				console.log("ERROR occurred in getTimestampedMapsCartopy()")
			}
		})
	})
}

function getTimestampedMaps(e) {
	$.ajax({
		type: "GET",
		url: server_root_maps + "json/" + url_parameters.sat + "/" + url_parameters.sec + "/lat/white/latest_times_all.json",
		dataType: "json",
		success: function(t) {
			t.timestamps_int.sort(function(e, t) {
				return t - e
			}), map_time = t.timestamps_int[t.timestamps_int.length - 1], $.each(t.timestamps_int, function(t, r) {
				if (r <= e) return map_time = r, !1
			}), map_lat_lon_tiles = {}, $("#holder-lat").length && $("#holder-lat").remove(), addMapLatLonToTileArray("lat", max_zoom_level, server_root_maps + "lat/" + url_parameters.sat + "/" + url_parameters.sec + "/white/", ".png", [map_time], !1, 1), 1 == url_parameters.lat && (map_lat_lon_tiles.lat[4] = !0, $("#holder-lat").show(), $("#latLonHideShow").prop("checked", !0).checkboxradio("refresh")), appendTiles(current_zoom_level, url_parameters.x, url_parameters.y), getTimestampedMapsCartopy(e)
		}
	})
}

function loadArchivedImagery() {
	$.ajax({
		type: "GET",
		url: server_root_2 + "json/" + url_parameters.sat + "/" + url_parameters.sec + "/" + url_parameters.p[0] + "/available_dates.json",
		dataType: "json",
		success: function(e) {
			updateDateSelects(e.dates_int), loadImageryTimes(getAvailableTimes(e.dates_int))
		},
		error: function() {
			alert("The selected sector does not have imagery for this product for the specified time(s).")
		}
	})
}

function getAvailableDates() {
	$.ajax({
		type: "GET",
		url: server_root_2 + "json/" + url_parameters.sat + "/" + url_parameters.sec + "/" + url_parameters.p[0] + "/available_dates.json",
		dataType: "json",
		success: function(e) {
			updateDateSelects(e.dates_int)
		},
		error: function() {
			alert("The selected sector does not have imagery for this band/product.")
		}
	})
}

function getLatestTimes() {
	var e = server_root_2 + "json/" + url_parameters.sat + "/" + url_parameters.sec + "/" + url_parameters.p[0] + "/latest_times.json";
	(url_parameters.im - 1) * url_parameters.ts + 1 > 100 && (e = server_root_2 + "json/" + url_parameters.sat + "/" + url_parameters.sec + "/" + url_parameters.p[0] + "/latest_times_5760.json"), $.ajax({
		type: "GET",
		url: e,
		dataType: "json",
		success: function(e) {
			loadImageryTimes(e.timestamps_int)
		}
	})
}

function getAvailableTimesForDate(e) {
	var t;
	return $.ajax({
		type: "GET",
		url: server_root_2 + "json/" + url_parameters.sat + "/" + url_parameters.sec + "/" + url_parameters.p[0] + "/" + e + "_by_hour.json",
		async: !1,
		dataType: "json",
		success: function(e) {
			t = e.timestamps_int
		}
	}), t
}

function getAvailableTimes(e) {
	var t, r, o, a;
	e = defaultFor(e, $("#startDateSelector > option").map(function() {
		var e = parseInt(this.value);
		if (e > 0) return e
	}).get());
	var l = [];
	if (0 != url_parameters.st && 0 != url_parameters.et) reverseTimesIfBackwards(), a = parseInt(url_parameters.et.toString().slice(0, 8)), o = parseInt(url_parameters.st.toString().slice(0, 8)), $.each(e, function(e, r) {
		if (r <= a && r >= o) t = getAvailableTimesForDate(r), $.each(Object.keys(t).sort().reverse(), function(e, r) {
			$.each(t[r], function(e, t) {
				t <= url_parameters.et && l.push(t)
			})
		});
		else if (r < o) return !1
	});
	else if (0 != url_parameters.et) a = parseInt(url_parameters.et.toString().slice(0, 8)), r = (url_parameters.im - 1) * url_parameters.ts + 1, $.each(e, function(e, o) {
		if (o <= a && (t = getAvailableTimesForDate(o), $.each(Object.keys(t).sort().reverse(), function(e, r) {
				$.each(t[r], function(e, t) {
					t <= url_parameters.et && l.push(t)
				})
			})), l.length >= r) return !1
	});
	else {
		if (0 == url_parameters.st) return void getLatestTimes();
		o = parseInt(url_parameters.st.toString().slice(0, 8)), r = (url_parameters.im - 1) * url_parameters.ts + 1, $.each(e.reverse(), function(e, a) {
			if (a >= o && (t = getAvailableTimesForDate(a), $.each(Object.keys(t).sort().reverse(), function(e, r) {
					$.each(t[r], function(e, t) {
						t >= url_parameters.st && l.push(t)
					})
				})), l.length >= r) return !1
		})
	}
	return l
}

function initializeTimeArrays(e) {
	var t = 0,
		r = 0;
	all_times = [];
	var o, a, l = 0;
	if (0 != url_parameters.st && 0 != url_parameters.et)
		if (reverseTimesIfBackwards(), o = $.inArray(url_parameters.st, e), a = $.inArray(url_parameters.et, e), -1 != o && -1 != a) {
			if (1 == url_parameters.ts) all_times = e.slice(a, o + 1);
			else {
				var i = e.slice(a, o + 1);
				for (t = 0; t < i.length; t += url_parameters.ts) all_times.push(i[t])
			}
			all_times = all_times.reverse()
		} else alert("Begin or end time not found, so showing current imagery"), url_parameters.st = 0, url_parameters.et = 0, updateURL(), setArchiveModeState();
	else if (0 != url_parameters.et)
		if (-1 != (a = $.inArray(parseInt(url_parameters.et), e))) {
			for ((l = a + (url_parameters.im - 1) * url_parameters.ts + 1) > e.length && (l = e.length), r = 0, t = a; t < l; t += url_parameters.ts) all_times[r] = e[t], r++;
			all_times = all_times.reverse()
		} else alert("End time not found, so showing current imagery"), url_parameters.st = 0, url_parameters.et = 0, updateURL();
	else if (0 != url_parameters.st) {
		if (e = e.reverse(), -1 != (o = $.inArray(url_parameters.st, e)))
			for ((l = o + (url_parameters.im - 1) * url_parameters.ts + 1) > e.length && (l = e.length), r = 0, t = o; t < l; t += url_parameters.ts) all_times[r] = e[t], r++;
		else alert("Begin time not found, so showing current imagery"), url_parameters.st = 0, url_parameters.et = 0, updateURL(), location.reload();
		e = e.reverse()
	}
	if (0 == all_times.length) {
		for ((l = (url_parameters.im - 1) * url_parameters.ts + 1) > e.length && (l = e.length), r = 0, t = 0; t < l; t += url_parameters.ts) all_times[r] = e[t], r++;
		all_times = all_times.reverse()
	}
	current_time = all_times[0]
}

function setArchiveModeState() {
	var e;
	0 != url_parameters.st || 0 != url_parameters.et ? ($("#archive").prop("checked", !0).checkboxradio("refresh"), 0 != url_parameters.st ? (e = url_parameters.st.toString().slice(8, 10), $("#startDateSelector").val(url_parameters.st.toString().slice(0, 8)).selectmenu("refresh"), $('#startHourSelector option:contains("' + e + '")').val() ? $("#startHourSelector").val($('#startHourSelector option:contains("' + e + '")').val()).selectmenu("refresh") : $("#startHourSelector").append('<option selected="true" value="-10">' + e + "</option>").selectmenu("refresh").selectmenu("disable"), $("#startTimeSelector option[ value=" + url_parameters.st + "]").length ? $("#startTimeSelector").val(url_parameters.st).selectmenu("refresh") : $("#startTimeSelector").append('<option selected="true" value="-10">' + convertTimestampToDisplayTime(url_parameters.st.toString().slice(8)) + "</option>").selectmenu("refresh").selectmenu("disable")) : ($("#startDateSelector").val(0).selectmenu("refresh"), $("#startHourSelector").val(0).selectmenu("refresh").selectmenu("disable"), $("#startTimeSelector").val(0).selectmenu("refresh").selectmenu("disable")), 0 != url_parameters.et ? (e = url_parameters.et.toString().slice(8, 10), $("#endDateSelector").val(url_parameters.et.toString().slice(0, 8)).selectmenu("refresh"), $('#endHourSelector option:contains("' + e + '")').val() ? $("#endHourSelector").val($('#endHourSelector option:contains("' + e + '")').val()).selectmenu("refresh") : $("#endHourSelector").append('<option selected="true" value="-10">' + e + "</option>").selectmenu("refresh").selectmenu("disable"), $("#endTimeSelector option[ value=" + url_parameters.et + "]").length ? $("#endTimeSelector").val(url_parameters.et).selectmenu("refresh") : $("#endTimeSelector").append('<option selected="true" value="-10">' + convertTimestampToDisplayTime(url_parameters.et.toString().slice(8)) + "</option>").selectmenu("refresh").selectmenu("disable")) : ($("#endDateSelector").val(0).selectmenu("refresh"), $("#endHourSelector").val(0).selectmenu("refresh").selectmenu("disable"), $("#endTimeSelector").val(0).selectmenu("refresh").selectmenu("disable")), 0 != url_parameters.st && 0 != url_parameters.et ? $("#numberOfImagesSelectorChange").selectmenu("disable") : $("#numberOfImagesSelectorChange").selectmenu("enable")) : ($("#archive").prop("checked", !1).checkboxradio("refresh"), $("#startDateSelector").val(0).selectmenu("refresh"), $("#startHourSelector").val(0).selectmenu("refresh").selectmenu("disable"), $("#startTimeSelector").val(0).selectmenu("refresh").selectmenu("disable"), $("#endDateSelector").val(0).selectmenu("refresh"), $("#endHourSelector").val(0).selectmenu("refresh").selectmenu("disable"), $("#endTimeSelector").val(0).selectmenu("refresh").selectmenu("disable"), $("#numberOfImagesSelectorChange").selectmenu("enable"))
}

function loadImageryTimes(e) {
	url_parameters = validateUrlParameters(), all_tiles = [], initializeTimeArrays(e), getTimestampedMaps(all_times[0]), setupProductInfoArray(), $.each(url_parameters.p, function(e, t) {
		$("#product" + leadingZeros(e, 2) + "Container button.productRemove").click(), initializeProduct(t)
	}), $.each(url_parameters.maps, function(e, t) {
		$("#" + e + "Container button.productRemove").click();
		var r = json.satellites[url_parameters.sat].sectors[url_parameters.sec].missing_maps;
		r && -1 != $.inArray(e, r) || "borders" == e && "off" == t || (addMapSelectFieldToContainer(e, t), url_parameters.maps[e] = t)
	}), getTimestampedMaps(all_times[0]), updateActiveProducts(), appendTiles(current_zoom_level, url_parameters.x, url_parameters.y), zoomToPoint(url_parameters.x, url_parameters.y, url_parameters.z, 0, 0, !1), resizeColorBar(), resetLoopSlider(), setArchiveModeState()
}

function updateArchiveDropdownTimes(e, t, r) {
	$obj = $(e), $obj.empty(), $obj.append('<option disabled="disabled">' + r + " Time</option>"), $obj.append('<option selected="true" value="0">' + r + " Time Not Set</option>"), $.each(t, function(e, t) {
		$obj.append("<option value='" + t + "'>" + convertTimestampToDisplayTime(t.toString().slice(8)) + "</option>")
	}), $obj.selectmenu("enable"), $obj.val(0).selectmenu("refresh"), $obj.selectmenu("open"), $(e + "-button").focus()
}

function updateArchiveDropdownHours(e, t, r) {
	$obj = $(e), $.ajax({
		type: "GET",
		url: server_root_2 + "json/" + url_parameters.sat + "/" + url_parameters.sec + "/" + url_parameters.p[0] + "/" + t + "_by_hour.json",
		dataType: "json",
		success: function(t) {
			var o;
			$obj.empty(), $obj.append('<option disabled="disabled">' + r + " Hour</option>"), $obj.append('<option selected="true" value="0">' + r + " Hour Not Set</option>"), o = t.timestamps_int, $.each(Object.keys(o).sort().reverse(), function(e, t) {
				$obj.append('<option value="' + JSON.stringify(o[t]) + '">' + t + "</option>")
			}), $obj.selectmenu("enable"), $obj.val(0).selectmenu("refresh"), $obj.selectmenu("open"), $(e + "-button").focus()
		}
	})
}

function resetLoopSlider() {
	loopingIndexMax = all_tiles[0][3].length - 1;
	var e = $("#loopSlider");
	e.slider("option", "max", loopingIndexMax), -1 != $.inArray(url_parameters.pause, all_tiles[0][3]) ? e.slider("value", $.inArray(url_parameters.pause, all_tiles[0][3])) : e.slider("value", 0)
}

function findProperty(e, t, r, o) {
	var a;
	try {
		if (null == (a = json.satellites[t].products[o][e])) throw "No value at product level."
	} catch (o) {
		try {
			if (null == (a = json.satellites[t].sectors[r].defaults[e])) throw "No value at sector level."
		} catch (r) {
			try {
				if (null == (a = json.satellites[t].defaults[e])) throw "No value at satellite level."
			} catch (t) {
				try {
					if (null == (a = json.defaults[e])) throw "No value at root level."
				} catch (e) {
					console.log(o + "\n" + r + "\n" + t + "\n" + e)
				}
			}
		}
	}
	return a
}

function setupProductInfoArray() {
	$.each(productsObject, function(e, t) {
		var r, o;
		o = findProperty("starting_opacity", url_parameters.sat, url_parameters.sec, e), r = max_zoom_level - productsObject[e].zoom_level_adjust, product_setup_info[e] = [r, url_parameters.sat + "---" + url_parameters.sec + "/" + e + "/", ".png", all_times, !0, o, productsObject[e].product_title, productsObject[e].color_table_name, productsObject[e].product_description]
	})
}

function initializeProduct(e) {
	p = all_tiles.length, addProductToTileArray(p, product_setup_info[e][0], product_setup_info[e][1], product_setup_info[e][2], product_setup_info[e][3], product_setup_info[e][4], product_setup_info[e][5], product_setup_info[e][6], product_setup_info[e][7], product_setup_info[e][8]), addProductToDisplay(p)
}

function setLoopingIndexToNextEnabledImage() {
	((loopingIndex += loopingIndexIncrementer) > loopingIndexMax + 1 || loopingIndex < loopingIndexMin - 1) && (loopingIndex = $("#loopSlider").slider("value"))
}

function startLoop() {
	stopLoop(), $("#playPause").button("option", "label", "Stop (space)"), 1 != needToPreloadTimesLater ? (loopJsSpeed = Math.abs($("#animationSpeed").slider("value")), loopJsTimer = setInterval(function() {
		setLoopingIndexToNextEnabledImage(), $("#loopSlider").slider("value", loopingIndex), updateActiveImage(), setNextImage()
	}, loopJsSpeed)) : preloadAfterPaused(!0)
}

function setNextImage() {
	loopingIndex >= loopingIndexMax ? "loop" == loopRockRev ? (loopingIndexIncrementer = 1, loopingIndex = loopingIndexMin - 1, clearInterval(loopJsTimer), loopJsPauseTimer = setTimeout(function() {
		startLoop()
	}, 3 * loopJsSpeed)) : "rock" == loopRockRev && (loopingIndexIncrementer = -1, clearInterval(loopJsTimer), loopJsPauseTimer = setTimeout(function() {
		startLoop()
	}, 3 * loopJsSpeed)) : loopingIndex <= loopingIndexMin && ("rock" == loopRockRev ? loopingIndexIncrementer = 1 : "rev" == loopRockRev && (loopingIndexIncrementer = -1, loopingIndex = loopingIndexMax + 1), "loop" != loopRockRev && (clearInterval(loopJsTimer), loopJsPauseTimer = setTimeout(function() {
		startLoop()
	}, 3 * loopJsSpeed)))
}

function stopLoop() {
	$("#playPause").button("option", "label", "Play (space)"), clearInterval(loopJsTimer), loopJsTimer = null, clearTimeout(loopJsPauseTimer), loopJsPauseTimer = null
}

function setLoopingIndexMinMax() {
	loopingIndexMin = all_tiles[0][3].length, loopingIndexMax = 0;
	for (var e = 0; e < all_tiles[0][3].length; e++) e < loopingIndexMin && (loopingIndexMin = e), e > loopingIndexMax && (loopingIndexMax = e)
}

function clickSelectmenuWithKeyboard(e) {
	$elem_menu = $("#" + e.attr("id") + "-menu"), $elem_menu.parent("div").hasClass("ui-selectmenu-open") ? (e.selectmenu("close"), $elem_menu.blur()) : (e.selectmenu("open"), $elem_menu.focus())
}

function moveImagery(e, t) {
	if (1 != zoom_animation_running) {
		zoom_animation_running = 1;
		var r = parseFloat($(window).width() / 6),
			o = $zoom_holder.offset().left,
			a = $zoom_holder.offset().top;
		if ("top" == e) {
			var l = {
				top: t + "=" + r,
				left: "+=0"
			};
			a = "+" == t ? $zoom_holder.offset().top + r : $zoom_holder.offset().top - r
		} else {
			l = {
				top: "+=0",
				left: t + "=" + r
			};
			o = "+" == t ? $zoom_holder.offset().left + r : $zoom_holder.offset().left - r
		}
		$zoom_holder.animate(l, {
			complete: function() {
				i = getCurrentImageryXY(), url_parameters.x = i.x, url_parameters.y = i.y, updateURL(), zoom_animation_running = 0
			}
		}), $("#comparisonSlider").animate({
			left: l.left
		});
		var i = convertZoomHolderXYToImageryXY(o, a);
		appendTiles(current_zoom_level, i.x, i.y)
	}
}

function bindMouseToZoomHolder() {
	$zoom_holder.mousemove(function(e) {
		mouse_x = e.pageX, mouse_y = e.pageY
	})
}

function removeFollowGraphics() {
	$(".followBox").remove(), 1 == $("div#followGraphicsWrapper").length && $("div#followGraphicsWrapper").remove()
}

function setFollowGraphicsCurrentInstruction(e, t) {
	t = defaultFor(t, e), $elem = $("#followInstructions1 ol li"), $elem.removeClass(), $elem.slice(0, e).addClass("past"), $elem.slice(e, t + 1).addClass("current"), $elem.slice(t + 1).addClass("future")
}

function animateZoom(e, t, r, o, a) {
	var l = !1;
	$("div#canvas_wrapper").length && ($("div#canvas_wrapper").remove(), $("#mouseDrawDrag").click(), l = !0), removeFollowGraphics(), 0 != followFeatureClickMode && (followFeatureClickMode = 1, setFollowGraphicsCurrentInstruction(0, 1)), $zoom_holder.animate(e, {
		step: function(e, t) {
			!a || "width" !== t.prop && "height" !== t.prop ? r && "left" === t.prop ? t.start = r : o && "top" === t.prop && (t.start = o) : t.start = a
		},
		complete: function() {
			1 == rotate_on_load ? ($("#rotationAngle").slider("value", validateUIAngle(url_parameters.angle)), rotate_on_load = 0) : (xy = getCurrentImageryXY(), url_parameters.x = xy.x, url_parameters.y = xy.y, url_parameters.z = t, updateURL()), zoom_animation_running = 0, 1 == slider_on_load && ($("#comparisonSliderCheckbox").click(), slider_on_load = 0), 1 == opacities_on_load && ($.each(url_parameters.opacity, function(e, t) {
				$("#product" + leadingZeros(e, 2) + "Container div.opacityWrapper div.opacitySlider").slider("value", t)
			}), $.each(url_parameters.mops, function(e, t) {
				$("#" + e + "Container div.mapOpacitySlider").slider("value", t)
			}), $.each(url_parameters.hidden, function(e, t) {
				1 == t && $("#product" + leadingZeros(e, 2) + "Container .productHideShow").click()
			}), $.each(url_parameters.mhidden, function(e, t) {
				1 == t && $("#" + e + "Container .mapHideShow").click()
			}), opacities_on_load = 0), 1 == mouse_draw_on_load && ($("#mouseDrawDrag").click(), mouse_draw_on_load = 0), l && $("#mouseDrawDrag").click(), 0 == url_parameters.follow_hide && followXVector && followYVector && drawFollowVector()
		}
	});
	var i = $("#comparisonSlider");
	i.length && ($(".product_holder").animate({
		width: e.width,
		height: e.height
	}), $(".map_lat_lon_holder").animate({
		width: e.width,
		height: e.height
	}), i.animate({
		width: e.width,
		left: e.left
	}), i.slider("option", "step", Math.pow(2, max_zoom_level - t)), $("#comparisonSliderWrapper").animate({
		width: i.slider("value") / Math.pow(2, max_zoom_level - t)
	}))
}

function zoomToPoint(e, t, r, o, a, l) {
	if (o = defaultFor(o, 0), a = defaultFor(a, 0), l = defaultFor(l, 1), r > max_zoom_level) alert("Can't zoom in any further.");
	else if (r < 0) alert("Can't zoom out any further.");
	else if (1 != zoom_animation_running) {
		zoom_animation_running = 1;
		var i = {};
		current_zoom_level = r;
		var s = e / Math.pow(2, max_zoom_level - r) * -1,
			n = t / Math.pow(2, max_zoom_level - r) * -1,
			c = {
				left_move: 0,
				top_move: 0
			};
		rotate_on_load || (c = calculateRotationMotion(url_parameters.angle, r)), i.width = tile_size * Math.pow(2, r), i.height = tile_size * Math.pow(2, r);
		var u = parseInt($zoom_holder.css("left")),
			p = parseInt($zoom_holder.css("top")),
			d = sector_array.tile_size * Math.pow(2, url_parameters.z),
			m = getRotationAdjustment(sector_array.tile_size / 2 * Math.pow(2, url_parameters.z)),
			_ = $(window).width() / 2 - $zoom_holder.offset().left,
			h = $(window).height() / 2 - $zoom_holder.offset().top,
			f = _ / parseInt($zoom_holder.css("width")),
			g = h / parseInt($zoom_holder.css("height")),
			v = -1 * m * 2 * Math.sqrt(2),
			w = -1 * m - v / 2 + v * f,
			b = -1 * m - v / 2 + v * g;
		if (rotate_on_load || $zoom_holder.css({
				left: convertNumberToCssMoveString(w),
				top: convertNumberToCssMoveString(b)
			}), i.left = s + o + c.left_move, i.top = n + a + c.top_move, animateZoom(i, r, u, p, d), l) {
			var x = convertZoomHolderXYToImageryXY($(window).width() / 2 + s, $(window).height() / 2 + n);
			appendTiles(current_zoom_level, x.x, x.y)
		}
		setFollowVectors()
	}
}

function areSameArray(e, t) {
	if (null == e || null == t) return !1;
	if (e.length != t.length) return !1;
	for (var r = 0; r < e.length; ++r)
		if (e[r] !== t[r]) return !1;
	return !0
}

function removeTiles() {
	if (0 != tiles_in_view_before.length) {
		var e;
		e = tiles_in_view_before.filter(function(e) {
			var t = !1;
			if ($.each(tiles_in_view, function() {
					if (1 == areSameArray(e, this)) return t = !0, !1
				}), 0 == t) return e
		});
		for (var t = 0; t < all_tiles.length; t++)
			for (var r = leadingZeros(t, 2), o = 0; o < e.length; o++) {
				var a = e[o][0],
					l = e[o][1],
					i = e[o][2];
				if (!(current_zoom_level >= all_tiles[t][0].length - 1 && a >= all_tiles[t][0].length - 1)) {
					if (a > all_tiles[t][0].length - 1) l = translateTileNumber(l, a, s = all_tiles[t][0].length - 1), i = translateTileNumber(i, a, s);
					else var s = a;
					all_tiles[t][0][s][l][i][0] = !1, all_tiles[t][0][s][l][i][1] = !1, all_tiles[t][0][s][l][i][2] = !1, $(".product_holder .p" + r + tile_filenames[s][l][i][1]).remove()
				}
			}
		$.each(map_lat_lon_tiles, function(t, r) {
			for (var o = 0; o < e.length; o++) {
				var a = e[o][0],
					l = e[o][1],
					i = e[o][2];
				map_lat_lon_tiles[t][0][a][l][i][0] = !1, map_lat_lon_tiles[t][0][a][l][i][1] = !1, map_lat_lon_tiles[t][0][a][l][i][2] = !1, $(".map_lat_lon_holder .p-" + t + tile_filenames[a][l][i][1]).remove()
			}
		}), tiles_in_view_before = []
	}
}

function hideProduct(e) {
	$("#product_holder_" + leadingZeros(e, 2)).hide(), all_tiles[e][4] = !1
}

function showProduct(e) {
	$("#product_holder_" + leadingZeros(e, 2)).show(), all_tiles[e][4] = !0
}

function hideMapLatLon(e) {
	$("#holder-" + e).hide(), map_lat_lon_tiles[e][4] = !1, url_parameters[e] = 0, updateURL()
}

function showMapLatLon(e, t = !1) {
	if (map_lat_lon_tiles[e]) {
		if (map_lat_lon_tiles[e][4] = !0, t) {
			var r = convertZoomHolderXYToImageryXY($zoom_holder.offset().left, $zoom_holder.offset().top);
			appendTiles(current_zoom_level, r.x, r.y)
		}
		$("#holder-" + e).show()
	} else getTimestampedMaps(all_times[0]);
	url_parameters[e] = 1, updateURL()
}

function convertPageXYToImageXY(e, t) {
	return getCurrentImageryXYAtPoint(e, t)
}

function getTimesToLoad() {
	var e = [],
		t = [];
	return loopJsTimer || loopJsPauseTimer || loopWasRunning || needToPreloadTimesLater ? ($.each(all_times, function(r, o) {
		o < current_time ? e.push(o) : t.push(o)
	}), t = t.concat(e)) : (t.push(current_time), needToPreloadTimesLater = !0), t
}

function getTilesToLoadRotated(e, t, r) {
	for (var o = Math.sqrt(Math.pow($(window).width() / 2, 2) + Math.pow($(window).height() / 2, 2)) * Math.pow(2, max_zoom_level - e), a = Math.pow(2, e) - 1, l = [], i = 0, s = 0; s <= a; s++)
		for (var n = 0; n <= a; n++) {
			var c = convertScreenPixelsToBigPixels(n * sector_array.tile_size),
				u = convertScreenPixelsToBigPixels(s * sector_array.tile_size),
				p = convertScreenPixelsToBigPixels(sector_array.tile_size);
			Math.min(calculateDistanceBetweenXYs(t, r, c, u), calculateDistanceBetweenXYs(t, r, c + p, u), calculateDistanceBetweenXYs(t, r, c, u + p), calculateDistanceBetweenXYs(t, r, c + p, u + p)) <= o * (1 + convertBigPixelsToScreenPixels(.26)) && (l[i] = [e, s, n], i++)
		}
	return l
}

function appendTiles(e, t, r, o) {
	o = defaultFor(o, ""), 0 != tiles_in_view.length && (0 != tiles_in_view_before.length ? tiles_in_view_before.push.apply(tiles_in_view_before, tiles_in_view) : tiles_in_view_before = tiles_in_view), tiles_in_view = getTilesToLoadRotated(e, t, r);
	for (var a = 0; a < all_tiles.length; a++) {
		var l = server_root + current_time.toString().substr(0, 8) + "/" + all_tiles[a][1] + current_time + "/";
		appendTilesForProduct(a, e, l)
	}
	$.each(map_lat_lon_tiles, function(t, r) {
		if (map_lat_lon_tiles[t] && 1 == map_lat_lon_tiles[t][4]) {
			var a = map_lat_lon_tiles[t][1] + (o || map_time) + "/";
			appendTilesForMapLatLon(t, e, a)
		}
	}), preloadTimesInView(!0)
}

function appendTilesForProduct(e, t, r) {
	var o = e,
		a = leadingZeros(o, 2),
		l = "product_holder_" + a;
	if (t > all_tiles[o][0].length - 1) var i = all_tiles[o][0].length - 1;
	else i = t;
	var s = "zoom_level_" + leadingZeros(i, 2);
	$("#" + l).length || $product_wrapper.append("<div id='" + l + "' class='product_holder'></div>"), $("#" + l + "> ." + s).length || $("#" + l).append("<div class='" + s + " zoom_level'></div>"), 0 == $("#" + l + "> ." + s).is(":visible") && $("#" + l + "> ." + s).show();
	for (var n = 0; n < tiles_in_view.length; n++) {
		var c = tiles_in_view[n][1],
			u = tiles_in_view[n][2];
		t > i && (c = translateTileNumber(c, t, i), u = translateTileNumber(u, t, i)), 0 == all_tiles[o][0][i][c][u][0] ? ($("#" + l + "> ." + s).append('<img class="p' + a + tile_filenames[i][c][u][2] + '" src="' + r + tile_filenames[i][c][u][0] + all_tiles[o][2] + '" alt="Image tile showing part of the imagery for zoom level ' + i + ", row " + c + ", column " + u + '" />'), all_tiles[o][0][i][c][u][0] = !0, all_tiles[o][0][i][c][u][1] = !0) : (all_tiles[o][0][i][c][u][1] = !0, $(".p" + a + tile_filenames[i][c][u][1]).show())
	}
}

function appendTilesForMapLatLon(e, t, r) {
	var o = "holder-" + e,
		a = t,
		l = "zoom_level_" + leadingZeros(a, 2);
	$("#" + o).length || $map_wrapper.append("<div id='" + o + "' class='map_lat_lon_holder'></div>"), $("#" + o + "> ." + l).length || $("#" + o).append("<div class='" + l + " zoom_level'></div>"), 0 == $("#" + o + "> ." + l).is(":visible") && $("#" + o + "> ." + l).show();
	for (var i = 0; i < tiles_in_view.length; i++) {
		var s = tiles_in_view[i][1],
			n = tiles_in_view[i][2];
		0 == map_lat_lon_tiles[e][0][a][s][n][0] ? ($("#" + o + "> ." + l).append('<img class="p-' + e + tile_filenames[a][s][n][2] + '" src="' + r + tile_filenames[a][s][n][0] + map_lat_lon_tiles[e][2] + '" alt="Image tile showing part of the map or lat/lon grid for the imagery for zoom level ' + a + ", row " + s + ", column " + n + '" />'), map_lat_lon_tiles[e][0][a][s][n][0] = !0, map_lat_lon_tiles[e][0][a][s][n][1] = !0) : (map_lat_lon_tiles[e][0][a][s][n][1] = !0, $(".p-" + e + tile_filenames[a][s][n][1]).show())
	}
}

function updateTiles(e) {
	for (var t = 0; t < all_tiles.length; t++)
		if (1 == all_tiles[t][4]) {
			var r = leadingZeros(t, 2),
				o = current_zoom_level;
			current_zoom_level > all_tiles[t][0].length - 1 && (o = all_tiles[t][0].length - 1);
			for (var a = 0; a < tiles_in_view.length; a++) {
				var l = tiles_in_view[a][1],
					i = tiles_in_view[a][2];
				current_zoom_level > all_tiles[t][0].length - 1 && (l = translateTileNumber(l, current_zoom_level, all_tiles[t][0].length - 1), i = translateTileNumber(i, current_zoom_level, all_tiles[t][0].length - 1)), $(".product_holder .p" + r + tile_filenames[o][l][i][1]).attr("src", server_root + e.toString().substr(0, 8) + "/" + all_tiles[t][1] + e + "/" + tile_filenames[o][l][i][0] + all_tiles[t][2])
			}
		}
}

function convertImageryXToZoomHolderX(e) {
	return -1 * e / Math.pow(2, max_zoom_level - current_zoom_level) + $(window).width() / 2
}

function convertImageryYToZoomHolderY(e) {
	return -1 * e / Math.pow(2, max_zoom_level - current_zoom_level) + $(window).height() / 2
}

function convertZoomHolderXYToImageryXY(e, t) {
	return {
		x: (e - $(window).width() / 2) * Math.pow(2, max_zoom_level - current_zoom_level) * -1,
		y: (t - $(window).height() / 2) * Math.pow(2, max_zoom_level - current_zoom_level) * -1
	}
}

function getRotationAdjustment(e) {
	var t = (url_parameters.angle + 180) % 90;
	return e * (Math.sin(t * Math.PI / 180) + Math.cos(t * Math.PI / 180) - 1)
}

function getCurrentImageryXY(e = !0) {
	return getCurrentImageryXYAtPoint($(window).width() / 2, $(window).height() / 2, e)
}

function getCurrentImageryXYAtPoint(e, t, r = !0) {
	if (!r) return xy = {
		x: (e - $zoom_holder.offset().left) * Math.pow(2, max_zoom_level - current_zoom_level),
		y: (t - $zoom_holder.offset().top) * Math.pow(2, max_zoom_level - current_zoom_level)
	}, xy;
	var o = sector_array.tile_size / 2 * Math.pow(2, current_zoom_level),
		a = getRotationAdjustment(o),
		l = e - $zoom_holder.offset().left - a,
		i = t - $zoom_holder.offset().top - a,
		s = url_parameters.angle,
		n = s < 0 ? s + 360 : s,
		c = l - o,
		u = -1 * (i - o),
		p = Math.sqrt(Math.pow(c, 2) + Math.pow(u, 2)),
		d = 180 * Math.atan(c / u) / Math.PI + (u <= 0 ? 180 : 0) || 0,
		m = p * (Math.sin(-1 * d * Math.PI / 180) - Math.sin(-1 * (d - n) * Math.PI / 180)),
		_ = i + -1 * p * (1 - Math.cos(-1 * d * Math.PI / 180) - (1 - Math.cos(-1 * (d - n) * Math.PI / 180)));
	return xy = {
		x: (l + m) * Math.pow(2, max_zoom_level - current_zoom_level),
		y: _ * Math.pow(2, max_zoom_level - current_zoom_level)
	}, xy
}

function updateURL(e, t, r) {
	if (e = defaultFor(e, 0), t = defaultFor(t, 0), r = defaultFor(r, 0), 1 == e && 0 == t && setDefaultsForSatellite(), 1 == e || 1 == t) {
		var o = json.satellites[url_parameters.sat].products,
			a = json.satellites[url_parameters.sat].sectors[url_parameters.sec].missing_products;
		(!url_parameters.p || !o[url_parameters.p[0]] || a && a[url_parameters.p[0]]) && (url_parameters.p = {
			0: json.satellites[url_parameters.sat].sectors[url_parameters.sec].default_product
		});
		var l = json.satellites[url_parameters.sat].sectors[url_parameters.sec].tile_size * Math.pow(2, json.satellites[url_parameters.sat].sectors[url_parameters.sec].max_zoom_level) / 2;
		url_parameters.x = l, url_parameters.y = l, url_parameters.z = 0, url_parameters.follow_feature = 0, url_parameters.follow_x = {}, url_parameters.follow_y = {}, url_parameters.follow_hide = 0
	}
	1 != e && 1 != r || (url_parameters.opacity = {
		0: 1
	}, url_parameters.hidden = {
		0: 0
	}), 1 != e && 1 != t && 1 != r || (url_parameters.slider = -1), sector_array = json.satellites[url_parameters.sat].sectors[url_parameters.sec], productsObject = getProductsObject(), checkForProductNumbers(), url_parameters.p[0] in productsObject || (url_parameters.p = {
		0: json.satellites[url_parameters.sat].sectors[url_parameters.sec].default_product
	}), new_url = encodeURI(window.location.pathname + "?" + decodeURIComponent($.param(url_parameters))), window.history.replaceState("", document.title, new_url), document.title = "RAMMB/CIRA SLIDER: " + json.satellites[url_parameters.sat].satellite_title + " Satellite Imagery: " + json.satellites[url_parameters.sat].sectors[url_parameters.sec].sector_title + " Sector: " + productsObject[url_parameters.p[0]].product_title, "full_disk" == url_parameters.sec || "northern_hemisphere" == url_parameters.sec || "southern_hemisphere" == url_parameters.sec ? $(".navigation-arrow").show() : $(".navigation-arrow").hide(), $("#debug_xy").html(`x: ${url_parameters.x}<br />y: ${url_parameters.y}<br />` + `xs: ${url_parameters.x/Math.pow(2,max_zoom_level-current_zoom_level)}<br />` + `ys: ${url_parameters.y/Math.pow(2,max_zoom_level-current_zoom_level)}`)
}

function preloadImages(e) {
	$(e).each(function() {
		$('<img alt="Preloaded image" />')[0].src = this
	})
}

function translateTileNumber(e, t, r) {
	return Math.floor(e / Math.pow(2, t - r))
}

function preloadTiles(e, t, r) {
	for (var o = [], a = [], l = 0; l < all_tiles.length; l++) $.each(t, function(i, s) {
		var n = 0;
		tiles_to_preload = jQuery.map(e, function(a) {
			var c = a[0],
				u = a[1],
				p = a[2];
			if (c > all_tiles[l][0].length - 1 && (u = translateTileNumber(u, c, all_tiles[l][0].length - 1), p = translateTileNumber(p, c, all_tiles[l][0].length - 1), c = all_tiles[l][0].length - 1), 0 != all_tiles[l][0][c][u][p][2] && 1 != needToPreloadTimesLater || (o = [l, c, u, p], all_tiles[l][0][c][u][p][2] = !0), l == all_tiles.length - 1 && i == t.length - 1 && n == e.length - 1 && r && 0 != o.length && $("#preloadImagesDoneTester").attr("src", server_root + s.toString().substr(0, 8) + "/" + all_tiles[o[0]][1] + s + "/" + tile_filenames[o[1]][o[2]][o[3]][0] + all_tiles[o[0]][2]), n++, 0 != o.length) return server_root + s.toString().substr(0, 8) + "/" + all_tiles[l][1] + s + "/" + tile_filenames[c][u][p][0] + all_tiles[l][2]
		}), 0 != tiles_to_preload.length && (1 == r ? preloadImages(tiles_to_preload) : a = a.concat(tiles_to_preload))
	});
	0 != o.length ? 1 == r && stopLoopShowSpinner() : removeTiles()
}

function preloadTimesInView(e) {
	preloadTiles(tiles_in_view, getTimesToLoad(), e)
}

function addProductToDisplay(e) {
	var t = e;
	$("#dummyHolder").after("<li id='product" + leadingZeros(t, 2) + "Container' class='productContainer'><label for='product" + leadingZeros(t, 2) + "Container'>" + all_tiles[t][7] + "</label><input class='productNumber' type='hidden' value='" + t + "' /><button class='productRemove' title='Completely remove this product from view.' value='" + t + "'></button><label class='productHideShowLabel' for='productHideShow" + t + "'>Hide</label><input type='checkbox' class='productHideShow' name='productHideShow" + t + "' id='productHideShow" + t + "' title='Hide/Show this product temporarily.' value='" + t + "'><div class='opacityWrapper' title='Control the opacity for this product'><div id='product" + leadingZeros(t, 2) + "Opacity' class='opacitySlider'></div></div><button class='productInfo' title='Click for more info about this band/product' value='" + t + "'></button></li>"), setupProductBoxUI(t), showProduct(t)
}

function changeOpacity(e, t, r) {
	var o = e.parents("li").children(".productNumber").prop("value");
	all_tiles[o][5] = r.value, url_parameters.opacity[o] = r.value, $("#product_holder_" + leadingZeros(o, 2)).css("opacity", r.value), updateURL()
}

function setupProductBoxUI(e) {
	var t = e;
	$("#product" + leadingZeros(t, 2) + "Container div.opacityWrapper div.opacitySlider").slider({
		value: 1,
		min: 0,
		max: 1,
		step: .01,
		change: function(e, t) {
			changeOpacity($(this), e, t)
		}
	}), $("#product" + leadingZeros(t, 2) + "Container button.productRemove").button({
		label: "x"
	}).on("click", function() {
		if (1 == all_tiles.length) return alert("The last product can't be deleted. Please use the \"(P)roduct\" menu to switch to another product you'd like to view."), !1;
		var e = parseInt($(this).prop("value")),
			t = leadingZeros(e, 2),
			r = 0;
		if (-1 != url_parameters.slider) {
			$("#comparisonSliderCheckbox").click();
			r = 1
		}
		if ($("#productSelectorOverlay option[ value='" + url_parameters.p[e] + "']").prop("disabled", !1), $("#productSelectorOverlay").selectmenu("refresh"), $("#productSelectorOverlay-menu .ui-menu-item-wrapper:contains('----------')").addClass("productHeading"), $(".productHeading").parent().css({
				opacity: 1
			}), $("#product_holder_" + t).remove(), $("#product" + leadingZeros(e, 2) + "Container").remove(), e == all_tiles.length - 1) $.each(["p", "opacity", "hidden"], function(t, r) {
			delete url_parameters[r][e]
		});
		else
			for (i = e; i < all_tiles.length - 1; i++) $("#product" + leadingZeros(i + 1, 2) + "Container label").attr("for", "product" + leadingZeros(i, 2) + "Container"), $("#product" + leadingZeros(i + 1, 2) + "Container input.productNumber").attr("value", i), $("#product" + leadingZeros(i + 1, 2) + "Container button.productRemove").val(i), $("#product" + leadingZeros(i + 1, 2) + "Container .productHideShow").val(i), $("#product" + leadingZeros(i + 1, 2) + "Opacity").attr("id", "product" + leadingZeros(i, 2) + "Opacity"), $("#product" + leadingZeros(i + 1, 2) + "Container button.productInfo").val(i), $("#product" + leadingZeros(i + 1, 2) + "Container").attr("id", "product" + leadingZeros(i, 2) + "Container"), $("#product_holder_" + leadingZeros(i + 1, 2)).attr("id", "product_holder_" + leadingZeros(i, 2)), $("img.p" + leadingZeros(i + 1, 2)).removeClass("p" + leadingZeros(i + 1, 2)).addClass("p" + leadingZeros(i, 2)), $.each(["p", "opacity", "hidden"], function(e, t) {
				Object.defineProperty(url_parameters[t], i, Object.getOwnPropertyDescriptor(url_parameters[t], i + 1)), delete url_parameters[t][i + 1]
			});
		updateURL(), all_tiles.splice(e, 1), all_tiles.length > 1 && 1 == r && $("#comparisonSliderCheckbox").click(), all_tiles.length < 3 && $("#productSelectorOverlay").selectmenu("enable"), $.isEmptyObject(all_tiles) || updateActiveProducts()
	}), $("#product" + leadingZeros(t, 2) + "Container .productHideShow").checkboxradio().on("click", function() {
		var e = $(this).prop("value");
		this.checked ? (url_parameters.hidden[e] = 1, hideProduct(e)) : (url_parameters.hidden[e] = 0, showProduct(e)), updateURL()
	}), $("#productInfoScreen").dialog({
		width: "auto",
		height: "auto",
		autoOpen: !1,
		show: {
			effect: "blind",
			duration: 1e3
		},
		hide: {
			effect: "blind",
			duration: 1e3
		}
	}), $("#product" + leadingZeros(t, 2) + "Container button.productInfo").button({
		label: "Info"
	}).on("click", function() {
		var e, t = parseInt($(this).prop("value"));
		$("#productInfoScreen").children("h1").html(all_tiles[t][7]), null != all_tiles[t][9] && "" != all_tiles[t][9] ? $("#productInfoScreen").children("p").html(all_tiles[t][9]) : $("#productInfoScreen").children("p").html("No additional information currently available."), (e = $("#productInfoScreen")).dialog("isOpen") ? e.dialog("close") : e.dialog("open"), blurObject($(this))
	})
}

function showOverlaySpinner() {
	$("#overlay").length || ($("body").append('<div id="overlay"><p>Loading</p><img id="loading" src="/images/loading_spinner.gif" alt="Animated loading logo shown while the site is loading data" /></div>'), $("#overlay").click(function() {
		$(this).remove()
	}), $(document).keyup(function(e) {
		27 === e.which && $("#overlay").remove()
	}), $("#overlay").on("contextmenu", function(e) {
		e.preventDefault()
	}))
}

function stopLoopShowSpinner() {
	(loopJsTimer || loopJsPauseTimer) && (stopLoop(), loopWasRunning = !0), showOverlaySpinner()
}

function loopSliderChange(e, t) {
	var r, o, a, l, i, s;
	($("#imageryTime").text(all_tiles[0][6][t.value]), $("p#imageryTimeBottom ").text(all_tiles[0][6][t.value]), current_time = all_times[t.value], loopingIndex = t.value, 1 == url_parameters.follow_feature) && (r = (o = followXVector * (loopingIndex - loopingIndexPrevious)) < 0 ? "+" : "-", l = (i = followYVector * (loopingIndex - loopingIndexPrevious)) < 0 ? "+" : "-", a = Math.abs(o), s = Math.abs(i), $zoom_holder.css({
		left: r + "=" + a,
		top: l + "=" + s
	}));
	updateTiles(all_tiles[0][3][t.value]), loopingIndexPrevious = loopingIndex
}

function calculateRotationMotion(e, t = url_parameters.z) {
	var r = (e = parseInt(e)) - url_parameters.angle || e;
	angle_360 = e < 0 ? e + 360 : e;
	var o = sector_array.tile_size / 2 * Math.pow(2, max_zoom_level),
		a = url_parameters.x - o,
		l = -1 * (url_parameters.y - o),
		i = Math.sqrt(Math.pow(a, 2) + Math.pow(l, 2)) / Math.pow(2, max_zoom_level - t),
		s = 180 * Math.atan(a / l) / Math.PI + (l <= 0 ? 180 : 0) || 0,
		n = angle_360 + s,
		c = i * (Math.sin(n * Math.PI / 180) - Math.sin((n - r) * Math.PI / 180)),
		u = i * (1 - Math.cos(n * Math.PI / 180) - (1 - Math.cos((n - r) * Math.PI / 180)));
	return {
		angle_360: angle_360,
		left_move: -1 * c,
		top_move: -1 * u
	}
}

function rotationAngleChange(e) {
	rotationMotion = calculateRotationMotion(e), url_parameters.angle = e, updateURL(), $zoom_holder.css({
		transform: "rotate( " + rotationMotion.angle_360 + "deg)",
		left: convertNumberToCssMoveString(rotationMotion.left_move),
		top: convertNumberToCssMoveString(rotationMotion.top_move)
	}), $("label[for=rotationAngle]").text(e + "°"), moveZoomHolderDiamond(), checkFeaturesToDisableOnRotation()
}

function moveZoomHolderDiamond() {
	$("#zoom_holder_diamond").css({
		width: $zoom_holder.css("width"),
		height: $zoom_holder.css("height"),
		left: $zoom_holder.offset().left - $(window).width() / 2,
		top: $zoom_holder.offset().top - $(window).height() / 2
	})
}

function checkFeaturesToDisableOnRotation() {
	var e = parseInt(url_parameters.angle),
		t = $("#downloadLoop"),
		r = $("#followFeature"),
		o = $("#followHideShow"),
		a = $("#followClear"),
		l = $("#comparisonSliderCheckbox ");
	0 == e ? (t.prop("disabled", !1).button("refresh"), r.prop("disabled", !1).button("refresh"), o.prop("disabled", !1).button("refresh"), a.prop("disabled", !1).button("refresh"), l.prop("disabled", !1).button("refresh")) : (t.prop("disabled", !0).button("refresh"), $(".followInstructions ").hide(), a.click(), r.prop("disabled", !0).button("refresh"), o.prop("disabled", !0).button("refresh"), a.prop("disabled", !0).button("refresh"), l.prop("checked") && l.click(), l.prop("disabled", !0).button("refresh"))
}

function validateUIAngle(e) {
	return (e = parseInt(e)) < -180 ? e + 360 : e > 180 ? e - 360 : e
}

function animationSpeedSliderChange() {
	startLoop(), url_parameters.speed = Math.abs($("#animationSpeed").slider("value")), updateURL()
}

function speedIncrease() {
	var e = $("#animationSpeed");
	e.slider("value") != e.slider("option", "max") && e.slider("value", e.slider("value") + 10)
}

function speedDecrease() {
	var e = $("#animationSpeed");
	e.slider("value") != e.slider("option", "min") && e.slider("value", e.slider("value") - 10)
}

function preloadAfterPaused(e) {
	1 == e ? (loopWasRunning = !0, stopLoopShowSpinner(), preloadTimesInView(!0)) : (loopWasRunning = !1, preloadTimesInView(!1)), needToPreloadTimesLater = !1
}

function updateActiveImage() {
	0 != $("div#followGraphicsWrapper").length && ($(".imageMarker").removeClass("activeImage"), $("#imageMarker" + leadingZeros(loopingIndex, 2)).addClass("activeImage"))
}

function nextImage() {
	var e = $("#loopSlider");
	$(".ui-slider-handle").is(":focus") || (e.slider("value") != e.slider("option", "max") ? e.slider("value", e.slider("value") + 1) : e.slider("value", e.slider("option", "min")), updateActiveImage(), updateDynamicUrlValues(), updateURL()), 1 == needToPreloadTimesLater && preloadAfterPaused(!1)
}

function previousImage() {
	var e = $("#loopSlider");
	$(".ui-slider-handle").is(":focus") || (e.slider("value") != e.slider("option", "min") ? e.slider("value", e.slider("value") - 1) : e.slider("value", e.slider("option", "max")), updateActiveImage(), updateDynamicUrlValues(), updateURL()), 1 == needToPreloadTimesLater && preloadAfterPaused(!1)
}

function resizeColorBar() {
	if ("" != productsObject[url_parameters.p[0]].color_table_name) {
		$("#colorBarWrapper").css("width", "100%").css("width", "-=250px");
		var e = 1350,
			t = [360, 640, 1030, 1116, 1280, 1350, 1366, 1600, 1670, 1920];
		for (i = 0; i < t.length; i++)
			if ($(window).width() - 250 < t[i]) {
				e = ("0" + t[i]).slice(-4);
				break
			}
		$("#colorBar1").attr("src", "/data/color_bar/" + url_parameters.sat + "/color_bar_" + e + "_" + productsObject[url_parameters.p[0]].color_table_name + ".png")
	}
}

function hideOverlaySpinner() {
	$("#overlay").remove()
}

function preloadDone() {
	hideOverlaySpinner(), url_parameters.map ? ("0" !== url_parameters.map && ($("#mapSelector").val("borders"), $("#mapSelector").trigger("addDefaultBorders")), delete url_parameters.map) : $.isEmptyObject(url_parameters.maps) && ($("#mapSelector").val("borders"), $("#mapSelector").trigger("addDefaultBorders")), removeTiles(), 1 == loopWasRunning && (startLoop(), loopWasRunning = !1)
}

function loadImagery() {
	0 != url_parameters.st || 0 != url_parameters.et ? loadArchivedImagery() : (getLatestTimes(), getAvailableDates())
}

function openHelpMenu() {
	$("#helpScreen").dialog("isOpen") ? $("#helpScreen").dialog("close") : $("#helpScreen").dialog("open")
}

function toggleDebugMode() {
	(debug_on = !debug_on) ? ($("#debug_xy").show(), $(".test_center_line").show(), $(".test_boxes").show(), $("#zoom_holder_diamond").show()) : ($("#debug_xy").hide(), $(".test_center_line").hide(), $(".test_boxes").hide(), $("#zoom_holder_diamond").hide())
}

function setRotationAngleWithKeyboard(e) {
	var t = $("#rotationAngle"),
		r = 190 == e ? t.slider("option", "step") : -1 * t.slider("option", "step"),
		o = validateUIAngle(t.slider("value") + r);
	t.slider("value", o)
}

function setCenterForMouseRegion(e, t, r) {
	var o = convertPageXYToImageXY(e, t),
		a = getCurrentImageryXY(),
		l = o.x + (a.x - o.x) / Math.pow(2, r),
		i = o.y + (a.y - o.y) / Math.pow(2, r);
	url_parameters.x = l, url_parameters.y = i, updateURL()
}

function convertNumberToCssMoveString(e) {
	return plus_or_minus = e >= 0 ? "+" : "-", plus_or_minus + "=" + Math.abs(e) + "px"
}

function updateActiveProducts() {
	$("#productSelectorChange-menu .ui-menu-item-wrapper").removeClass("activeProduct"), $.each(url_parameters.p, function(e, t) {
		var r = decodeEntities(all_tiles[e][7]);
		$("#productSelectorChange-menu .ui-menu-item-wrapper:contains('" + r + "')").addClass("activeProduct")
	})
}
$("#latLonHideShow").checkboxradio().click(function(e) {
	this.checked ? showMapLatLon("lat", !0) : hideMapLatLon("lat"), blurObject(this)
}), $("#comparisonSliderCheckbox").checkboxradio().click(function(e) {
	var t = all_tiles.length - 1,
		r = leadingZeros(t, 2);
	t < 1 ? (alert('To use product comparison slider, use the "Add Overlay" option below to add a second product to compare first, and then click the "Slid( e )r" button again'), $(this).prop("checked", !1).checkboxradio("refresh")) : this.checked ? ($(".product_holder").width($zoom_holder.width()).height($zoom_holder.width()), $(".map_lat_lon_holder").width($zoom_holder.width()).height($zoom_holder.width()), $("#product_holder_" + r).wrap('<div id="comparisonSliderWrapper"></div>'), $("#comparisonSliderWrapper").width(url_parameters.x / Math.pow(2, max_zoom_level - current_zoom_level)), $("#rammb_viewport").append('<div id="comparisonSlider"></div>'), $("#comparisonSlider").width($zoom_holder.width()).css({
		left: $zoom_holder.css("left"),
		top: $(window).height() / -2 + 50
	}).slider({
		min: 0,
		max: tile_size * Math.pow(2, max_zoom_level),
		step: Math.pow(2, max_zoom_level - current_zoom_level),
		slide: function(e, t) {
			$("#comparisonSliderWrapper").width(t.value / Math.pow(2, max_zoom_level - current_zoom_level))
		},
		change: function(e, t) {
			$("#comparisonSliderWrapper").width(t.value / Math.pow(2, max_zoom_level - current_zoom_level))
		},
		stop: function(e, t) {
			url_parameters.slider = $("#comparisonSlider").slider("value"), updateURL()
		}
	}), -1 != url_parameters.slider ? $("#comparisonSlider").slider("value", url_parameters.slider) : ($("#comparisonSlider").slider("value", url_parameters.x), url_parameters.slider = $("#comparisonSlider").slider("value"))) : ($(".product_holder").width("100%").height("100%"), $(".map_lat_lon_holder").width("100%").height("100%"), $("#comparisonSlider").length && ($("#comparisonSlider").remove(), $("#comparisonSliderWrapper .product_holder").unwrap("#comparisonSliderWrapper")), url_parameters.slider = -1), updateURL(), blurObject(this)
}), $("button#canvasClear").button().click(function(e) {
	void 0 !== ctx && ctx.clearRect(0, 0, $drawingCanvas.width(), $drawingCanvas.height()), blurObject(this)
}), $("#helpScreen").dialog({
	width: .8 * $(window).width(),
	height: .8 * $(window).height(),
	autoOpen: !1,
	show: {
		effect: "blind",
		duration: 1e3
	},
	hide: {
		effect: "blind",
		duration: 1e3
	}
}), $("#sliderLink").click(function(e) {
	e.preventDefault(), openHelpMenu(), blurObject(this)
}), $("#helpOpen").button().click(function(e) {
	openHelpMenu(), blurObject(this)
}), $("#goHome").button().click(function(e) {
	window.location = "/", blurObject(this)
}), $("#shortUrlDialog").dialog({
	autoOpen: !1
}), $("#shareUrl").button().click(function(e) {
	$("#shortUrlDialog").dialog("isOpen") ? $("#shortUrlDialog").dialog("close") : (updateURL(), urlToShorten = "https://rammb-slider.cira.colostate.edu/" + window.location.search, $.ajax({
		type: "GET",
		url: "https://col.st/api?api=IZn1SKgjIdVl&url=" + encodeURIComponent(urlToShorten),
		dataType: "jsonp",
		success: function(e) {
			0 == e.error ? returnUrl = e.short : console.log("URL shortener returned error code: " + e.error)
		},
		error: function() {
			console.log("Unable to communicate with URL shortener.")
		},
		complete: function() {
			$("input#shortUrl").val(returnUrl), hideOverlaySpinner(), "rammb-slider.cira.colostate.edu" == window.location.hostname ? ($("#shortUrlDialog").dialog("open"), $("#shortUrl").select()) : ($("#longUrl").length || $("#shortUrl").before("<input type='text' name='longUrl' id='longUrl'></input><p style='color: red;'>You're on a private server with limited access for specific users. To share this loop to the private server with others with access to it, use the full, long URL in the box above or in the main URL bar of your browser.</p><p>If you want to share this loop publicly (like on social media), please use the short link below that points to the publicly-available \"rammb-slider.cira.colostate.edu\" server so that other users will be able to get to it.</p><p style='color: #ff0000;'> Please note that products and features undergoing testing may not yet be on the public server.</p>"), $("input#longUrl").val(window.location.href), $("#shortUrlDialog").dialog("open"), $("#longUrl").select())
		}
	})), blurObject(this)
}), $("#mouseDrawDrag").checkboxradio().click(function(e) {
	if (this.checked) {
		if ($zoom_holder.unbind("mousemove"), $zoom_holder.draggable("disable"), 0 == $("#canvas_wrapper").length) {
			$("#product_wrapper").before('<div id="canvas_wrapper"><canvas id="drawingCanvas" width="0" height="0" style="background-color: transparent;"></canvas></div>'), $drawingCanvas = $("canvas#drawingCanvas"), ctx = $drawingCanvas[0].getContext("2d");
			var t = 3 * $(window).width(),
				r = 3 * $(window).height();
			ctx.canvas.width = t, ctx.canvas.height = r;
			var o = getCurrentImageryXY(),
				a = convertBigPixelsToScreenPixels(o.x) - t / 2,
				l = convertBigPixelsToScreenPixels(o.y) - r / 2;
			$("div#canvas_wrapper").css({
				left: a + "px",
				top: l + "px"
			})
		}
		$drawingCanvas.mousemove(function(e) {
			findXYForDrawing("move", e), mouse_x = e.pageX, mouse_y = e.pageY
		}), $drawingCanvas.mousedown(function(e) {
			findXYForDrawing("down", e)
		}), $drawingCanvas.mouseup(function(e) {
			findXYForDrawing("up", e)
		}), $drawingCanvas.mouseout(function(e) {
			findXYForDrawing("out", e)
		}), url_parameters.mouse_draw = 1, updateURL()
	} else $drawingCanvas.unbind("mousemove"), $drawingCanvas.unbind("mousedown"), $drawingCanvas.unbind("mouseup"), $drawingCanvas.unbind("mousemout"), $zoom_holder.draggable("enable"), url_parameters.mouse_draw = 0, updateURL();
	blurObject(this)
}), $("#archive").checkboxradio().click(function() {
	this.checked ? (url_parameters.st = all_times[0], url_parameters.et = all_times[all_times.length - 1], updateURL(), setArchiveModeState()) : (url_parameters.st = 0, url_parameters.et = 0, updateURL(), $("#followClear").click(), getLatestTimes()), blurObject(this)
}), $("#startDateSelector").selectmenu({
	change: function(e, t) {
		updateArchiveDropdownHours("#startHourSelector", $(this).val(), "Begin")
	}
}).on("selectmenuopen", function(e, t) {
	$(this).val(0)
}), $("#endDateSelector").selectmenu({
	change: function(e, t) {
		updateArchiveDropdownHours("#endHourSelector", $(this).val(), "End")
	}
}).on("selectmenuopen", function(e, t) {
	$(this).val(0)
}), $("#startHourSelector").selectmenu({
	change: function(e, t) {
		updateArchiveDropdownTimes("#startTimeSelector", JSON.parse($(this).val()), "Begin")
	}
}), $("#endHourSelector").selectmenu({
	change: function(e, t) {
		updateArchiveDropdownTimes("#endTimeSelector", JSON.parse($(this).val()), "End")
	}
}), $("#startTimeSelector").selectmenu({
	change: function(e, t) {
		url_parameters.st = $(this).val(), $("#followClear").click(), loadImageryTimes(getAvailableTimes()), blurObject(this)
	}
}), $("#endTimeSelector").selectmenu({
	change: function(e, t) {
		url_parameters.et = $(this).val(), $("#followClear").click(), loadImageryTimes(getAvailableTimes()), blurObject(this)
	}
}), $(document).keydown(function(e) {
	var t = e.which,
		r = getCurrentImageryXY();
	e.ctrlKey || e.shiftKey || e.altKey || e.metaKey ? e.shiftKey && (39 == t ? moveImagery("left", "-") : 37 == t && moveImagery("left", "+"), 38 == t ? moveImagery("top", "+") : 40 == t ? moveImagery("top", "-") : 191 == t ? (e.preventDefault(), $("#helpOpen").click()) : 188 == t ? setRotationAngleWithKeyboard(t) : 190 == t ? setRotationAngleWithKeyboard(t) : 51 == t && toggleDebugMode()) : (65 == t ? $("#archive").click() : 66 == t ? clickSelectmenuWithKeyboard($("#startDateSelector")) : 67 == t ? clickSelectmenuWithKeyboard($("#sectorSelectorChange")) : 68 == t ? $("#downloadLoop").prop("disabled") || $("#downloadLoop").click() : 69 == t ? $("#comparisonSliderCheckbox").prop("disabled") || $("#comparisonSliderCheckbox").click() : 71 == t ? $("#canvasClear").click() : 72 == t ? $("#menuHideShow").click() : 73 == t ? clickSelectmenuWithKeyboard($("#numberOfImagesSelectorChange")) : 74 == t ? nextImage() : 75 == t ? previousImage() : 76 == t ? $("#radioLoop").click() : 77 == t ? clickSelectmenuWithKeyboard($("#mapSelector")) : 78 == t ? $("#latLonHideShow").click() : 79 == t ? clickSelectmenuWithKeyboard($("#productSelectorOverlay")) : 80 == t ? clickSelectmenuWithKeyboard($("#productSelectorChange")) : 82 == t ? $("#radioRock").click() : 83 == t ? clickSelectmenuWithKeyboard($("#satelliteSelectorChange")) : 84 == t ? clickSelectmenuWithKeyboard($("#timeStepSelectorChange")) : 85 == t ? $("#shareUrl").click() : 86 == t ? $("#radioRev").click() : 87 == t ? $("#mouseDrawDrag").click() : 88 == t || (89 == t ? $("#goHome").click() : 90 == t ? $("#maxZoom").click() : 188 == t ? setRotationAngleWithKeyboard(t) : 110 == t || 190 == t ? setRotationAngleWithKeyboard(t) : 191 == t ? (e.preventDefault(), $("#helpOpen").click()) : 48 == t || 96 == t ? zoomToPoint(r.x, r.y, 0) : 49 == t || 97 == t ? zoomToPoint(r.x, r.y, 1) : 50 == t || 98 == t ? zoomToPoint(r.x, r.y, 2) : 51 == t || 99 == t ? zoomToPoint(r.x, r.y, 3) : 52 == t || 100 == t ? zoomToPoint(r.x, r.y, 4) : 53 == t || 101 == t ? zoomToPoint(r.x, r.y, 5) : 187 == t || 107 == t ? $("#zoomIn").click() : 189 != t && 109 != t || $("#zoomOut").click()), $(".ui-button").is(":focus") || $(".ui-checkboxradio").is(":focus") || $(".ui-slider-handle").is(":focus") || (39 == t ? nextImage() : 37 == t && previousImage(), 38 == t ? speedIncrease() : 40 == t ? speedDecrease() : 32 == t && $("#playPause").click()))
}), $zoom_holder.bind("mousewheel DOMMouseScroll", function(e) {
	var t, r;
	e.originalEvent.wheelDelta ? 0 == (r = Math.floor(e.originalEvent.wheelDelta / 120)) && (r = e.originalEvent.wheelDelta > 0 ? 1 : -1) : e.originalEvent.detail && 0 == (r = Math.floor(e.originalEvent.detail / -7)) && (r = e.originalEvent.detail > 0 ? -1 : 1), (t = current_zoom_level + r) > max_zoom_level ? t = max_zoom_level : t < 0 && (t = 0), r = t - current_zoom_level, setCenterForMouseRegion(e.pageX, e.pageY, r), zoomToPoint(url_parameters.x, url_parameters.y, url_parameters.z + r)
}), $zoom_holder.draggable({
	scroll: !1,
	start: function(e, t) {
		var r = parseInt($(this).css("left")),
			o = parseInt($(this).css("top"));
		recoupLeft = r - t.position.left, recoupTop = o - t.position.top
	},
	stop: function() {
		var e = getCurrentImageryXY();
		url_parameters.x = e.x, url_parameters.y = e.y, url_parameters.z = current_zoom_level, updateURL(), appendTiles(current_zoom_level, e.x, e.y), moveZoomHolderDiamond()
	},
	drag: function(e, t) {
		$("#comparisonSlider").css({
			left: t.position.left
		}), moveZoomHolderDiamond(), t.position.left += recoupLeft, t.position.top += recoupTop
	}
}), bindMouseToZoomHolder(), $(document).bind("mousedown", function(e) {
	!$(e.target).parents("#custom-menu").length > 0 && ($("#custom-menu").hide(100), 0 != followFeatureClickMode && !$(e.target).parents("#zoom_holder").length > 0 && !$(e.target).parents("#controlWrapper").length > 0 && alert("When you're ready to select a feature in the imagery for the feature-following loop, please make sure to click on the imagery itself."))
}), $zoom_holder.dblclick(function(e) {
	setCenterForMouseRegion(e.pageX, e.pageY, 1), zoomToPoint(url_parameters.x, url_parameters.y, url_parameters.z + 1)
}), $zoom_holder.mouseup(function(e) {
	if (3 === e.which)
		if (2 === e.originalEvent.detail) {
			clearTimeout(right_click_timeout);
			setCenterForMouseRegion(e.pageX, e.pageY, -1), zoomToPoint(url_parameters.x, url_parameters.y, url_parameters.z + -1)
		} else 1 === e.originalEvent.detail && (right_click_timeout = setTimeout(function() {
			var e, t;
			e = right_click_x + $("#custom-menu").width() > $(window).width() ? $(window).width() - $("#custom-menu").width() : right_click_x, t = right_click_y + $("#custom-menu").height() > $(window).height() ? $(window).height() - $("#custom-menu").height() : right_click_y, $("#custom-menu").finish().toggle(100).css({
				left: e + "px",
				top: t + "px"
			})
		}, 500));
	else if (1 === e.which) {
		if (1 == maxZoomClickMode) zoomToPoint((t = convertPageXYToImageXY(e.pageX, e.pageY)).x, t.y, max_zoom_level);
		if (1 == followFeatureClickMode) {
			var t = convertPageXYToImageXY(e.pageX, e.pageY);
			url_parameters.follow_x = {}, url_parameters.follow_y = {};
			var r = getAbsoluteLoopingIndex();
			url_parameters.follow_x[r] = t.x, url_parameters.follow_y[r] = t.y, displayFollowBox(convertBigPixelsToScreenPixels(t.x), convertBigPixelsToScreenPixels(t.y), 0), followFeatureClickMode = 2, setFollowGraphicsCurrentInstruction(2, 3)
		} else if (2 == followFeatureClickMode) {
			if (1 == displayFollowBox(convertBigPixelsToScreenPixels((t = convertPageXYToImageXY(e.pageX, e.pageY)).x), convertBigPixelsToScreenPixels(t.y), 1)) {
				r = getAbsoluteLoopingIndex();
				url_parameters.follow_x[r] = t.x, url_parameters.follow_y[r] = t.y, url_parameters.follow_feature = 1, updateURL(), setFollowVectors(), drawFollowVector(), followFeatureClickMode = 0, setFollowGraphicsCurrentInstruction(4), 1 == loopWasRunning && (loopWasRunning = !1, $("#playPause").click()), $("#followInstructions1").fadeOut(), $("#followInstructions2").fadeIn().delay(2e4).fadeOut()
			}
		}
	}
	$("#maxZoom").prop("checked", !1).checkboxradio("refresh"), maxZoomClickMode = 0
}), $zoom_holder.bind("contextmenu", function(e) {
	e.preventDefault(), right_click_x = e.pageX, right_click_y = e.pageY
}), $("#testFunction").on("click", function(e) {}), $("#testFunction2").on("click", function(e) {}), $("#productSelectorChange").selectmenu({
	change: function(e, t) {
		var r = $(this).val();
		url_parameters.p = {
			0: r
		}, updateURL(0, 0, 1), location.reload(), blurObject(this)
	}
}), $("#productSelectorOverlay").selectmenu({
	change: function(e, t) {
		var r = $(this).val();
		testUrl = (server_root.includes("http") ? "" : window.location.origin) + server_root + all_tiles[0][3][0].toString().slice(0, 8) + "/" + url_parameters.sat + "---" + url_parameters.sec + "/" + r + "/" + all_tiles[0][3][0] + "/00/000_000.png", $.get(testUrl).done(function() {
			var e = {};
			e[Object.keys(url_parameters.p).length] = r, $.extend(url_parameters.p, e), Object.keys(url_parameters.p).length >= 3 && $("#productSelectorOverlay").selectmenu("disable"), $("#productSelectorOverlay option[ value='" + r + "']").prop("disabled", !0), $("#productSelectorOverlay").selectmenu("refresh"), $("#productSelectorOverlay-menu .ui-menu-item-wrapper:contains('----------')").addClass("productHeading"), $(".productHeading").parent().css({
				opacity: 1
			}), initializeProduct(r);
			var t = {};
			t[Object.keys(url_parameters.opacity).length] = all_tiles[all_tiles.length - 1][5], $.extend(url_parameters.opacity, t);
			var o = {};
			o[Object.keys(url_parameters.hidden).length] = 0, $.extend(url_parameters.hidden, o), updateURL(), updateActiveProducts();
			var a = convertZoomHolderXYToImageryXY($zoom_holder.offset().left, $zoom_holder.offset().top);
			appendTiles(current_zoom_level, a.x, a.y), $("#product" + leadingZeros(all_tiles.length - 1, 2) + "Container div.opacityWrapper div.opacitySlider").slider("value", all_tiles[all_tiles.length - 1][5]), $("#comparisonSliderCheckbox").button("enable"), -1 != url_parameters.slider && ($("#comparisonSliderCheckbox").click(), $("#comparisonSliderCheckbox").click())
		}).fail(function() {
			alert("This product is not available for this timeframe.")
		}), blurObject(this)
	}
});
var mapSelectorFn = function(e, t) {
	var r = $(this).val();
	url_parameters.maps[r] = json.defaults.colors[r], updateURL(), getTimestampedMaps(all_times[0]), addMapSelectFieldToContainer(r, json.defaults.colors[r]), $(e.target).prop("selectedIndex", 0), blurObject(this)
};

function addMapSelectFieldToContainer(e, t) {
	var r = "",
		o = Object.keys(json.unique_colors);
	sector_array.white_maps_only && -1 == $.inArray(e, json.ignore_white_maps_only) ? r += "<option value='white' selected>White</option>" : $.each(json.colors, function(a, l) {
		-1 != $.inArray(a, o) && e != json.unique_colors[a] || (r += "<option value='" + a + "' " + (a == t ? " selected" : "") + ">" + l + "</option>")
	}), $("#preMapControlItem").after("<li id='" + e + "Container' class='map-container' mapKey='" + e + "'><label>" + json.defaults.maps[e] + "</label><button class='productRemove ui-button' title='Completely remove this map from view.' value='" + e + "'>x</button><select id='" + e + "ColorSelector' class='color-selector'>" + r + "</select><label class='mapHideShowLabel' for='mapHideShow" + e + "'>Hide</label><input type='checkbox' class='mapHideShow' name='mapHideShow" + e + "' id='mapHideShow" + e + "' title='Hide/Show this map temporarily.' value='" + e + "'><div class='mapOpacityWrapper'><div class='mapOpacitySlider' map='" + e + "'></div></div></li>"), $("#mapHideShow" + e).checkboxradio().on("click", function() {
		var e = $(this).prop("value");
		this.checked ? (url_parameters.mhidden[e] = 1, hideMapLatLon(e)) : (url_parameters.mhidden[e] = 0, showMapLatLon(e)), updateURL()
	}), $("#" + e + "Container div.mapOpacitySlider").slider({
		value: 1,
		min: 0,
		max: 1,
		step: .05,
		change: function(e, t) {
			changeMapOpacity($(this), e, t)
		}
	})
}

function changeMapOpacity(e, t, r) {
	var o = e.attr("map");
	url_parameters.mops[o] = r.value, $("#holder-" + o).css("opacity", r.value), updateURL()
}

function arrowClickShouldChangeSatellite(e) {
	var t = sector_array.tile_size * Math.pow(2, max_zoom_level) / 2;
	if ("up" == e) {
		var r = (url_parameters.x <= t ? 1 : -1) * convertScreenPixelsToBigPixels($(window).width() / 2),
			o = Math.max(Math.min(url_parameters.x + r, t), 0);
		adjustmentCrossesCenterLine(url_parameters.x, o, t) && (o = t);
		var a = (t ** 2 - (t - o) ** 2) ** .5;
		if (url_parameters.y - convertScreenPixelsToBigPixels($(window).height() / 2) < t - a) return !0
	} else if ("down" == e) {
		r = (url_parameters.x <= t ? 1 : -1) * convertScreenPixelsToBigPixels($(window).width() / 2), o = Math.max(Math.min(url_parameters.x + r, t), 0);
		adjustmentCrossesCenterLine(url_parameters.x, o, t) && (o = t);
		a = (t ** 2 - (t - o) ** 2) ** .5;
		if (url_parameters.y + convertScreenPixelsToBigPixels($(window).height() / 2) > t + a) return !0
	} else if ("left" == e) {
		var l = (url_parameters.y <= t ? 1 : -1) * convertScreenPixelsToBigPixels($(window).height() / 2),
			i = Math.max(Math.min(url_parameters.y + l, t), 0);
		adjustmentCrossesCenterLine(url_parameters.y, i, t) && (i = t);
		var s = (t ** 2 - (t - i) ** 2) ** .5;
		if (url_parameters.x - convertScreenPixelsToBigPixels($(window).width() / 2 - ($("#menuHideShow").prop("checked") ? 0 : 250)) < t - s) return !0
	} else if ("right" == e) {
		l = (url_parameters.y <= t ? 1 : -1) * convertScreenPixelsToBigPixels($(window).height() / 2), i = Math.max(Math.min(url_parameters.y + l, t), 0);
		adjustmentCrossesCenterLine(url_parameters.y, i, t) && (i = t);
		s = (t ** 2 - (t - i) ** 2) ** .5;
		if (url_parameters.x + convertScreenPixelsToBigPixels($(window).width() / 2) > t + s) return !0
	}
	return !1
}

function adjustmentCrossesCenterLine(e, t, r) {
	return (e - r) * (t - r) < 0
}
$("#mapSelector").selectmenu({
	change: mapSelectorFn
}), $("#mapSelector").on("addDefaultBorders", mapSelectorFn), $("#controlWrapper").on("change", ".map-container .color-selector", function(e) {
	var t = $(e.target).parent().attr("mapKey"),
		r = $(e.target).val();
	$("#holder-" + t).remove(), url_parameters.maps[t] = r, updateURL(), getTimestampedMaps(all_times[0])
}), $("#controlWrapper").on("click", ".map-container .productRemove.ui-button", function(e) {
	var t = $(e.target).parent().attr("mapKey");
	$("#mapSelector option[ value='" + t + "']").prop("disabled", !1), $("#mapSelector").selectmenu("refresh"), "borders" == t ? url_parameters.maps[t] = "off" : delete url_parameters.maps[t], delete url_parameters.mops[t], delete url_parameters.mhidden[t], updateURL(), delete map_lat_lon_tiles[t], $("#holder-" + t).remove(), $("#" + t + "Container").remove()
}), Object.keys(url_parameters.p).length >= 3 && $("#productSelectorOverlay").selectmenu("disable"), $("#timeStepSelectorChange").selectmenu({
	change: function(e, t) {
		var r = $(this).val(),
			o = url_parameters.ts;
		if (url_parameters.ts = r, 1 == url_parameters.follow_feature && followXVector && followYVector) {
			var a, l = getOrderedFollowValues(url_parameters.follow_x),
				i = getOrderedFollowValues(url_parameters.follow_y),
				s = loopingIndexMax + 1,
				n = s,
				c = calculateFirstLastImagePosition(l.followValues[0], i.followValues[0], l.followValues[1], i.followValues[1], l.imageNumbers[0], l.imageNumbers[1], s);
			if (0 != url_parameters.st && 0 == url_parameters.et) a = calculateFirstLastImagePosition(c.x0, c.y0, c.x1 - (c.x1 - c.x0) * (1 - r / o), c.y1 - (c.y1 - c.y0) * (1 - r / o), 0, s - 1, s);
			else if (0 != url_parameters.st && 0 != url_parameters.et) {
				if (r > s * o) return alert("Time step is greater than then number of images. Please increase the time between the start and end time of your images to keep the feature-following loop enabled."), url_parameters.ts = o, $(this).val(o), $(this).selectmenu("refresh"), updateURL(), void blurObject(this);
				delete url_parameters.follow_x[l.imageNumbers[0]], delete url_parameters.follow_y[i.imageNumbers[0]], delete url_parameters.follow_x[l.imageNumbers[1]], delete url_parameters.follow_y[i.imageNumbers[1]], n = Math.round(s / (r / o)), a = calculateFirstLastImagePosition(c.x0, c.y0, c.x1, c.y1, 0, n - 1, n), l.imageNumbers[0] = 0, i.imageNumbers[0] = 0, l.imageNumbers[1] = n - 1, i.imageNumbers[1] = n - 1
			} else a = calculateFirstLastImagePosition(c.x0 + (c.x1 - c.x0) * (1 - r / o), c.y0 + (c.y1 - c.y0) * (1 - r / o), c.x1, c.y1, 0, s - 1, s);
			var u = calculateFollowCoordinates(a.x0, a.y0, a.x1, a.y1, n, 0);
			url_parameters.follow_x[l.imageNumbers[0]] = u[l.imageNumbers[0]][0], url_parameters.follow_y[i.imageNumbers[0]] = u[i.imageNumbers[0]][1], url_parameters.follow_x[l.imageNumbers[1]] = u[l.imageNumbers[1]][0], url_parameters.follow_y[i.imageNumbers[1]] = u[i.imageNumbers[1]][1]
		}
		updateURL(), location.reload(), blurObject(this)
	}
}), $("#numberOfImagesSelectorChange").selectmenu({
	change: function(e, t) {
		var r = $(this).val(),
			o = parseInt(r),
			a = parseInt(url_parameters.im);
		if (url_parameters.im = r, 1 == url_parameters.follow_feature && followXVector && followYVector) {
			var l, i, s = o - a,
				n = o - 1,
				c = getOrderedFollowValues(url_parameters.follow_x),
				u = getOrderedFollowValues(url_parameters.follow_y),
				p = calculateFirstLastImagePosition(c.followValues[0], u.followValues[0], c.followValues[1], u.followValues[1], c.imageNumbers[0], c.imageNumbers[1], a),
				d = calculateFollowCoordinates(p.x0, p.y0, p.x1, p.y1, a, 0);
			delete url_parameters.follow_x[c.imageNumbers[0]], delete url_parameters.follow_y[u.imageNumbers[0]], delete url_parameters.follow_x[c.imageNumbers[1]], delete url_parameters.follow_y[u.imageNumbers[1]], 0 != url_parameters.st && 0 == url_parameters.et ? (l = c.imageNumbers[0], i = c.imageNumbers[1], s <= 0 && (l > n && (l = n - 1), i > n && (i = n), l == i && (l = n - 1)), url_parameters.follow_x[l] = d[l][0], url_parameters.follow_y[l] = d[l][1], url_parameters.follow_x[i] = d[i][0], url_parameters.follow_y[i] = d[i][1]) : (l = parseInt(c.imageNumbers[0]) + s, i = parseInt(c.imageNumbers[1]) + s, s <= 0 && (l < 0 && (l = 0), i < 0 && (i = 1), l == i && (i = 1)), url_parameters.follow_x[l] = d[l - s][0], url_parameters.follow_y[l] = d[l - s][1], url_parameters.follow_x[i] = d[i - s][0], url_parameters.follow_y[i] = d[i - s][1])
		}
		updateURL(), location.reload(), blurObject(this)
	}
}), $("#satelliteSelectorChange").selectmenu({
	change: function(e, t) {
		var r = $(this).val();
		url_parameters.sat = r, updateURL(1), location.reload(), blurObject(this)
	}
}), $("#sectorSelectorChange").selectmenu({
	change: function(e, t) {
		var r = $(this).val();
		url_parameters.sec = r, updateURL(0, 1), location.reload(), blurObject(this)
	}
}), $("select").selectmenu({
	position: {
		my: "left top",
		at: "left top",
		collision: "fit"
	},
	open: function(e, t) {
		$("div.ui-selectmenu-open") && $("div.ui-selectmenu-open").not($("#" + $(this).attr("id") + "-menu").parent()).each(function() {
			var e = $(this).children().first().attr("id").slice(0, -5);
			$("#" + e).selectmenu("close")
		}), $("#" + $(this).attr("id") + "-menu").css({
			"max-height": $(window).height() + "px",
			"max-width": $(window).width() + "px"
		})
	}
}), $.ajaxSetup({
	beforeSend: function() {
		showOverlaySpinner()
	},
	complete: function() {
		hideOverlaySpinner()
	}
}), $(".navigation-arrow").click(function(e) {
	var t = $(e.target).attr("direction");
	if (arrowClickShouldChangeSatellite(t)) {
		var r = json.satellites[url_parameters.sat].sectors[url_parameters.sec].navigation[t];
		url_parameters.sat = r.satellite, url_parameters.sec = r.sector, updateURL(1, 1, 0), location.reload()
	} else "up" == t ? moveImagery("top", "+") : "down" == t ? moveImagery("top", "-") : "left" == t ? moveImagery("left", "+") : "right" == t && moveImagery("left", "-")
}), $("#imageryTime").text(" Loading data.."), $("#loopSlider").slider({
	value: 0,
	min: 0,
	max: 5,
	step: 1,
	slide: function(e, t) {
		loopSliderChange(e, t)
	},
	change: function(e, t) {
		loopSliderChange(e, t)
	}
}), $("#animationSpeed").slider({
	value: 0 - url_parameters.speed,
	min: -250,
	max: -30,
	step: 10,
	slide: function(e, t) {
		animationSpeedSliderChange()
	},
	change: function(e, t) {
		animationSpeedSliderChange()
	}
}), $("#rotationAngle").slider({
	value: 0,
	min: -180,
	max: 180,
	step: 15,
	slide: function(e, t) {
		rotationAngleChange(t.value)
	},
	change: function(e, t) {
		!1 === rotationAngleSlideStopped ? rotationAngleChange(t.value) : rotationAngleSlideStopped = !1
	},
	stop: function(e, t) {
		rotationAngleSlideStopped = !0
	}
}), $("#advancedControlWrapper").buttonset().hide(), $("#advancedControlWrapper input:checkbox").prop("checked", !0).button("refresh"), $(document).tooltip({
	show: {
		effect: "slideDown",
		delay: 1e3,
		duration: "fast"
	},
	hide: {
		effect: "fold"
	},
	open: function(e, t) {
		setTimeout(function() {
			$(t.tooltip).hide()
		}, 8e3)
	}
}), $("#advancedControlWrapper").on("change", "input:checkbox", function() {
	$(this).is(":checked") ? (all_tiles[0][3][this.value].display = !0, setLoopingIndexMinMax()) : (all_tiles[0][3][this.value].display = !1, setLoopingIndexMinMax()), blurObject(this)
}), $("#showAll").button().click(function(e) {
	e.preventDefault(), $("#advancedControlWrapper input:checkbox").prop("checked", !0).button("refresh");
	for (var t = 0; t < all_tiles[0][3].length; t++) all_tiles[0][3][t].display = !0;
	setLoopingIndexMinMax(), blurObject(this)
}), $("#next").button().click(function(e) {
	e.preventDefault(), nextImage(), blurObject(this)
}), $("#previous").button().click(function(e) {
	e.preventDefault(), previousImage(), blurObject(this)
}), $("#playPause").button().click(function(e) {
	e.preventDefault(), loopJsTimer || loopJsPauseTimer ? (stopLoop(), updateDynamicUrlValues(), updateURL()) : (startLoop(), url_parameters.pause = 0, updateURL()), blurObject(this)
}), $("#zoomIn").button().click(function(e) {
	e.preventDefault();
	var t = getCurrentImageryXY();
	zoomToPoint(t.x, t.y, current_zoom_level + 1), blurObject(this)
}), $("#zoomOut").button().click(function(e) {
	e.preventDefault();
	var t = getCurrentImageryXY();
	zoomToPoint(t.x, t.y, current_zoom_level - 1), blurObject(this)
}), $("#maxZoom").checkboxradio().click(function(e) {
	!1 === $("#maxZoom").prop("checked") ? (maxZoomClickMode = 0, $("#maxZoom").prop("checked", !1).checkboxradio("refresh")) : maxZoomClickMode = 1, blurObject(this)
}), $("#followFeature").checkboxradio().click(function(e) {
	!1 === $("#followFeature").prop("checked") ? (0 != followFeatureClickMode && removeFollowGraphics(), followFeatureClickMode = 0, $("#followFeature").prop("checked", !1).checkboxradio("refresh"), $("#followInstructions1").fadeOut(), url_parameters.follow_feature = 0) : followXVector && followYVector ? url_parameters.follow_feature = 1 : ((loopJsTimer || loopJsPauseTimer) && (stopLoop(), loopWasRunning = !0), followFeatureClickMode = 1, setFollowGraphicsCurrentInstruction(0, 1), $("#followInstructions1").fadeIn()), updateDynamicUrlValues(), updateURL(), blurObject(this)
}), $("#followHideShow").checkboxradio().click(function(e) {
	!1 === $("#followHideShow").prop("checked") ? (drawFollowVector(), url_parameters.follow_hide = 0, updateURL()) : (removeFollowGraphics(), url_parameters.follow_hide = 1, updateURL()), blurObject(this)
}), $("#followClear").button().click(function(e) {
	removeFollowGraphics(), followFeatureClickMode = 0, $("#followFeature").prop("checked", !1).checkboxradio("refresh"), $("#followHideShow").prop("checked", !1).checkboxradio("refresh"), $(".followInstructions").fadeOut(), followXVector = 0, followYVector = 0, url_parameters.follow_feature = 0, url_parameters.follow_x = {}, url_parameters.follow_y = {}, url_parameters.follow_hide = 0, updateURL(), blurObject(this)
}), $(".followInstructions").click(function(e) {
	$(this).hide()
}), $("#menuHideShow").checkboxradio().click(function() {
	"0px" != $("#controlWrapper").css("left") ? ($("#controlWrapper").animate({
		left: "0px"
	}), $("label[ for=menuHideShow ]").animate({
		left: "250px"
	}), $("#navigation-arrow-left").animate({
		left: "255px"
	}), url_parameters.hide_controls = 0, updateURL()) : ($("#controlWrapper").animate({
		left: "-250px"
	}), $("label[ for=menuHideShow ]").animate({
		left: "0px"
	}), $("#navigation-arrow-left").animate({
		left: "0px"
	}), url_parameters.hide_controls = 1, updateURL()), blurObject(this)
}), $("#showTools").button().click(function(e) {
	e.preventDefault(), $("#advancedControlWrapper").is(":visible") ? $("#advancedControlWrapper").hide() : $("#advancedControlWrapper").show(), blurObject(this)
}), $("#fullScreen").button().click(function(e) {
	e.preventDefault(), $map3d = $("#map3d"), 0 == intHorizontalControlHeight ? (intVerticalControlWidth = intDefaultVerticalControlWidth, intHorizontalControlHeight = intDefaultHorizontalControlHeight, $("#controlWrapper").show(), $map3d.css("margin-right", "0"), $map3d.css("margin-left", "0"), $map3d.css("float", "left"), fitImageToWindow()) : (intVerticalControlWidth = 0, intHorizontalControlHeight = 0, $("#controlWrapper").hide(), $map3d.css("margin-right", "auto"), $map3d.css("margin-left", "auto"), $map3d.css("float", "none"), fitImageToWindow()), blurObject(this)
}), $("#radio_LoopRockRev").buttonset(), $("#map3d").click(function(e) {
	$("#fullScreen").click(), blurObject(this)
}), $("#radioLoop").click(function(e) {
	loopRockRev = "loop", loopingIndexIncrementer = 1, 0 == pause_loop_rock_rev ? (startLoop(), url_parameters.pause = 0) : pause_loop_rock_rev = 0, url_parameters.motion = "loop", updateURL(), blurObject(this)
}), $("#radioRock").click(function(e) {
	loopRockRev = "rock", 0 == pause_loop_rock_rev ? (startLoop(), url_parameters.pause = 0) : pause_loop_rock_rev = 0, url_parameters.motion = "rock", updateURL(), blurObject(this)
}), $("#radioRev").click(function(e) {
	loopRockRev = "rev", loopingIndexIncrementer = -1, 0 == pause_loop_rock_rev ? (startLoop(), url_parameters.pause = 0) : pause_loop_rock_rev = 0, url_parameters.motion = "rev", updateURL(), blurObject(this)
}), $("#disableImage").button().click(function(e) {
	disableCurrentImage(), blurObject(this)
}), $("#preloadImagesDoneTester").on("load", function() {
	preloadDone()
}), $("#colorBar1").on("load", function() {
	$(".orgLogos").css("bottom", parseInt($("#colorBarWrapper").css("height")) + 6 + "px")
}), $(window).resize(function() {
	resizeColorBar(), $("#comparisonSlider").css({
		top: $(window).height() / -2 + 50
	})
});
var canvas, ctx, drawing_active = !1,
	$drawingCanvas = !1,
	prevX = 0,
	currX = 0,
	prevY = 0,
	currY = 0,
	color_x = "yellow",
	color_y = 6;

function draw() {
	ctx.beginPath(), ctx.moveTo(prevX, prevY), ctx.lineTo(currX, currY), ctx.strokeStyle = color_x, ctx.lineWidth = color_y, ctx.stroke(), ctx.closePath()
}

function findXYForDrawing(e, t) {
	"down" == e && (prevX = currX, prevY = currY, currX = t.offsetX, currY = t.offsetY, drawing_active = !0, ctx.beginPath(), ctx.fillStyle = color_x, ctx.fillRect(currX, currY, 2, 2), ctx.closePath()), "up" != e && "out" != e || (drawing_active = !1), "move" == e && drawing_active && (prevX = currX, prevY = currY, currX = t.offsetX, currY = t.offsetY, draw())
}
var server_root = "/data/imagery/",
	server_root_2 = "/data/",
	server_root_maps = "/data/";
if (-1 != location.hostname.indexOf("localhost")) server_root = "http://rammb-slider2.cira.colostate.edu:82/data/imagery/", server_root_2 = "http://rammb-slider2.cira.colostate.edu:82/data/", server_root_maps = "http://rammb-slider2.cira.colostate.edu:82/data/";
var right_click_timeout, right_click_x, right_click_y, mouse_x, mouse_y, current_time, map_time, pause_loop_rock_rev = 0,
	maxZoomClickMode = 0,
	zoom_animation_running = 0,
	stitchedImages = [],
	slider_on_load = 0,
	mouse_draw_on_load = 0,
	opacities_on_load = 0,
	rotate_on_load = 0,
	$product_wrapper = $("#product_wrapper"),
	$map_wrapper = $("#map_wrapper"),
	current_zoom_level = 0,
	tile_size = sector_array.tile_size,
	max_zoom_level = sector_array.max_zoom_level,
	tile_filenames = createArray(max_zoom_level + 1, Math.pow(2, max_zoom_level), Math.pow(2, max_zoom_level), 2);
initializeTileFilenamesArray();
var all_tiles = [],
	map_lat_lon_tiles = {},
	tiles_in_view = [],
	tiles_in_view_before = [],
	all_times = [];
for (i = 0; i <= max_zoom_level; i++) $("#custom-menu").append('<li data-action="' + i + '">' + json.satellites[url_parameters.sat].imagery_resolutions[i + (findProperty("max_zoom_level", url_parameters.sat) - max_zoom_level)] + "</li>");
$("#custom-menu li").click(function() {
	var e;
	e = parseInt($(this).attr("data-action"));
	var t = convertPageXYToImageXY(right_click_x, right_click_y),
		r = t.x,
		o = t.y;
	url_parameters.x = r, url_parameters.y = o, updateURL(), zoomToPoint(r, o, e), $("#custom-menu").hide(100)
}), loadImagery(), current_zoom_level = url_parameters.z, opacities_on_load = 1, -1 != url_parameters.slider && (slider_on_load = 1), 1 == url_parameters.mouse_draw && (mouse_draw_on_load = 1), 0 != url_parameters.angle && (rotate_on_load = 1);
var loopJsTimer, loopJsPauseTimer, loopJsSpeed, rotationAngleSlideStopped = !1,
	followFeatureClickMode = 0,
	followBoxRevert = !1,
	followXVector = 0,
	followYVector = 0,
	loopWasRunning = !0,
	needToPreloadTimesLater = !1,
	loopingIndex = 0,
	loopingIndexPrevious = 0;
0 != url_parameters.pause && (loopWasRunning = !1);
var loopingIndexIncrementer = 1,
	loopRockRev = "loop",
	loopingIndexMin = 0,
	loopingIndexMax = 0;
$("#zoom_holder").css({
	left: Math.pow(tile_size, current_zoom_level) / 2 - convertBigPixelsToScreenPixels(url_parameters.x),
	top: Math.pow(tile_size, current_zoom_level) / 2 - convertBigPixelsToScreenPixels(url_parameters.y)
}), $.each(productsObject, function(e, t) {
	e == url_parameters.p[0] ? $("#productSelectorChange").append(" <option selected='true' value='" + e + "'>" + productsObject[e].product_title + "</option>") : "----------" == t.product_title.substring(0, 10) ? $("#productSelectorChange").append(" <option disabled='disabled' value='" + e + "'>" + productsObject[e].product_title + "</option>") : $("#productSelectorChange").append("<option value='" + e + "'>" + productsObject[e].product_title + "</option>");
	var r = !1;
	$.each(url_parameters.p, function(t, o) {
		o == e && (r = !0)
	}), 1 == r || "----------" == t.product_title.substring(0, 10) ? $("#productSelectorOverlay").append("<option disabled='disabled' value='" + e + "'>" + productsObject[e].product_title + "</option>") : $("#productSelectorOverlay").append("<option value='" + e + "'>" + productsObject[e].product_title + "</option>")
}), $("#productSelectorChange").selectmenu("refresh"), $("#productSelectorOverlay").selectmenu("refresh"), $("#productSelectorChange-menu .ui-menu-item-wrapper:contains('----------')").addClass("productHeading"), $("#productSelectorOverlay-menu .ui-menu-item-wrapper:contains('----------')").addClass("productHeading");
var missing_maps = json.satellites[url_parameters.sat].sectors[url_parameters.sec].missing_maps;

function calculateFollowSlope(e, t, r, o) {
	return (t - o) / (e - r)
}

function calculateFollowStep(e, t, r) {
	var o = (t - e) / (r - 1) * .9999;
	return 0 == o && (o = 1), o
}

function calculateFollowCoordinates(e, t, r, o, a, l) {
	var s = [],
		n = calculateFollowStep(e, r, a),
		c = calculateFollowSlope(e, t, r, o),
		u = t - c * e;
	if (e <= r)
		for (i = e; i <= r; i += n) s.push([Math.round(i), Math.round(c * i + u)]);
	else
		for (i = e; i >= r; i += n) s.push([Math.round(i), Math.round(c * i + u)]);
	return s
}

function addImageMarkers(e) {
	var t = calculateFollowSlope(e[0][0], e[0][1], e.slice(-1)[0][0], e.slice(-1)[0][1]),
		r = "";
	r = Math.abs(t) < 1 ? " vertical" : " horizontal";
	var o = e.length,
		a = $("#followGraphicsWrapper").position();
	$.each(e, function(e, t) {
		var l = "";
		e == o - 1 && (l = " last"), e == loopingIndex && (l = " activeImage"), $("#followGraphicsWrapper").append("<div id='imageMarker" + leadingZeros(e, 2) + "' class='imageMarker" + r + l + "' title='" + all_tiles[0][6][e] + " is the time the feature would be at approximately this location (line: " + Math.round(convertScreenPixelsToBigPixels(a.left + t[0])) + " and element: " + Math.round(convertScreenPixelsToBigPixels(a.top + t[1])) + ")' style='left: " + (t[0] - 1) + "px; top: " + (t[1] - 1) + "px;'></div>")
	})
}

function drawFollowVector() {
	appendFollowGraphicsWrapper();
	var e = $("#followGraphicsWrapper"),
		t = loopingIndexMax + 1,
		r = getOrderedFollowValues(url_parameters.follow_x),
		o = getOrderedFollowValues(url_parameters.follow_y),
		a = convertBigPixelsToScreenPixels(r.followValues[0]),
		l = convertBigPixelsToScreenPixels(o.followValues[0]),
		i = convertBigPixelsToScreenPixels(r.followValues[1]),
		s = convertBigPixelsToScreenPixels(o.followValues[1]);
	$(".followBox").remove(), displayFollowBox(a, l, 0, r.imageNumbers[0]), displayFollowBox(i, s, 1, r.imageNumbers[1]);
	var n, c, u, p, d = calculateFirstLastImagePosition(a, l, i, s, r.imageNumbers[0], r.imageNumbers[1], t);
	d.x0 <= d.x1 ? (n = d.x0 - 20, c = d.x1 + 20) : (n = d.x1 - 20, c = d.x0 + 20), d.y0 <= d.y1 ? (u = d.y0 - 20, p = d.y1 + 20) : (u = d.y1 - 20, p = d.y0 + 20);
	var m, _, h, f, g = c - n,
		v = p - u;
	d.x0 <= d.x1 ? (m = 20, h = g - 20) : (m = g - 20, h = 20), d.y0 <= d.y1 ? (_ = 20, f = v - 20) : (_ = v - 20, f = 20), e.empty(), e.css({
		top: u,
		left: n,
		width: g,
		height: v
	}), e.append('<svg id="followGraphics" width="' + g + '" height="' + v + '"><defs><marker id="markerArrow" markerWidth="130" markerHeight="130" refX="0" refY="6" orient="auto"><path d="M0,0 L0,11 L11,6 L0,0" style="fill: yellow;" /></marker></defs><line style="marker-end: url(#markerArrow );" x1="' + m + '" y1="' + _ + '" x2="' + h + '" y2="' + f + '" stroke="yellow" stroke-width="1" /></svg>'), addImageMarkers(calculateFollowCoordinates(m, _, h, f, t, 20))
}
$.each(json.defaults.maps, function(e, t) {
	missing_maps && -1 != $.inArray(e, missing_maps) || $("#mapSelector").append("<option value='" + e + "'>" + t + "</option>")
}), $("#mapSelector").selectmenu("refresh"), $(".productHeading").parent().css({
	opacity: 1
}), $.each(json.satellites, function(e, t) {
	e != url_parameters.sat ? $("#satelliteSelectorChange").append("<option value='" + e + "'>" + t.satellite_title + "</option>") : $("#satelliteSelectorChange").append(" <option class='' selected='true' value='" + e + "'>" + t.satellite_title + "</option>")
}), $("#satelliteSelectorChange").selectmenu("refresh"), $.each(json.satellites[url_parameters.sat].sectors, function(e, t) {
	e != url_parameters.sec ? $("#sectorSelectorChange").append("<option value='" + e + "'>" + t.sector_title + "</option>") : $("#sectorSelectorChange").append(" <option selected='true' value='" + e + "'>" + t.sector_title + "</option>")
}), $("#sectorSelectorChange").selectmenu("refresh"), $.each(json.number_of_images_options, function(e, t) {
	t != url_parameters.im ? $("#numberOfImagesSelectorChange").append("<option value='" + t + "'>" + t + "</option>") : $("#numberOfImagesSelectorChange").append(" <option selected='true' value='" + t + "'>" + t + "</option>")
}), $("#numberOfImagesSelectorChange").selectmenu("refresh"), $.each(json.time_step_options, function(e, t) {
	t != url_parameters.ts ? $("#timeStepSelectorChange").append("<option value='" + t + "'>" + t * minutes_between_images + " min</option>") : $("#timeStepSelectorChange").append(" <option selected='true' value='" + t + "'>" + t * minutes_between_images + " min</option>")
}), $("#timeStepSelectorChange").selectmenu("refresh");
var getTextHeight = function(e) {
	var t = $("<span>Hg</span>").css({
			fontFamily: e
		}),
		r = $("<div style='display: inline-block; width: 1px; height: 0px;'></div>"),
		o = $("<div></div>");
	o.append(t, r), $("body").append(o);
	try {
		var a = {};
		r.css({
			verticalAlign: "baseline"
		}), a.ascent = r.offset().top - t.offset().top, r.css({
			verticalAlign: "bottom"
		}), a.height = r.offset().top - t.offset().top, a.descent = a.height - a.ascent
	} finally {
		o.remove()
	}
	return a
};

function drawTextOnBackground(e, t, r, o, a, l, i, s, n, c) {
	s = defaultFor(s, !1), n = defaultFor(n, "left"), c = defaultFor(c, 5);
	var u = getTextHeight(r).height;
	e.font = r;
	var p = e.measureText(t).width;
	"left" == n ? l = 0 + c : "center" == n && (l -= p / 2), "bottom" == s && (i = e.canvas.height - u - c), e.textBaseline = "top", e.fillStyle = a;
	var d = {
		width: p + 2 * c,
		height: u + 2 * c
	};
	return e.fillRect(l - c, i - c, d.width, d.height), e.fillStyle = o, e.fillText(t, l, i), d
}

function stitchTiles(e) {
	var t, r, o, a, l = {},
		i = {},
		s = $(window).width(),
		n = $(window).height();
	e.forEach(function(c, u) {
		var p = parseUrlForTileInfo(c.path);
		l[p.timestamp] || 100 == p.productOrder || (l[p.timestamp] = document.createElement("canvas"), l[p.timestamp].width = s, l[p.timestamp].height = n, i[p.timestamp] = l[p.timestamp].getContext("2d")), e[u].tileNumber = p.tileNumber, e[u].timestamp = p.timestamp, e[u].productName = p.productName, e[u].productOrder = p.productOrder;
		var d = p.tileNumber[1],
			m = p.tileNumber[2];
		null == t && (t = d, r = d, o = m, a = m), t > d && (t = d), r < d && (r = d), o > m && (o = m), a < m && (a = m)
	}), Object.keys(i).forEach(function(e, t) {
		i[e].globalAlpha = 1, i[e].fillStyle = "black", i[e].fillRect(0, 0, s, n)
	}), (e = e.sort(function(e, t) {
		return e.productOrder - t.productOrder
	})).forEach(function(e, t) {
		var r = tile_size * Math.pow(2, current_zoom_level - e.tileNumber[0]),
			o = r * e.tileNumber[2] + $zoom_holder.offset().left,
			a = r * e.tileNumber[1] + $zoom_holder.offset().top;
		100 == e.productOrder ? Object.keys(i).forEach(function(t, l) {
			i[t].globalAlpha = 1, i[t].drawImage(e.data, o, a, r, r)
		}) : (i[e.timestamp].globalAlpha = all_tiles[e.productOrder][5], i[e.timestamp].drawImage(e.data, o, a, r, r))
	});
	var c = 0,
		u = 0,
		p = 0,
		d = 0;
	if ($("#colorBar1").length) {
		var m = $("#colorBar1");
		c = m.width(), u = m.height()
	}
	return Object.keys(i).forEach(function(e, t) {
		var r = drawTextOnBackground(i[e], convertTimestampToDisplayTime(e), "bold 16px sans-serif", "black", "white", 0, 0, "bottom", "left"); - 1 == $("#colorBar1").prop("src").indexOf("/images/transparent_pixel.png") && (p = s - r.width, d = p * (u / c), i[e].drawImage(m[0], r.width, n - u, p, d)), $("#canvas_wrapper").length && i[e].drawImage(document.getElementById("can"), $("#canvas_wrapper").offset().left, $("#canvas_wrapper").offset().top, $("#canvas_wrapper").width(), $("#canvas_wrapper").height()), i[e].drawImage(document.getElementById("rammbLogo"), s - 80 - 10, n - 80 - 6 - d, 80, 80), i[e].drawImage(document.getElementById("ciraLogo"), s - 110 - 90, n - 46 - 6 - d, 110, 46)
	}), l
}

function parseUrlForTileInfo(e) {
	for (var t = /.*\/([^\/]*)\/(\d{14})\/(\d{2})\/(\d{3})_(\d{3}).*/.exec(e), r = 100, o = 0; o < all_tiles.length; o++)
		if (-1 != all_tiles[o][1].search(t[1])) {
			r = o;
			break
		}
	return {
		productName: t[1],
		productOrder: r,
		timestamp: t[2],
		tileNumber: [parseInt(t[3]), parseInt(t[4]), parseInt(t[5])]
	}
}
var checkImage = function(e) {
	return new Promise(function(t) {
		var r = new Image;
		r.crossOrigin = "Anonymous", r.onload = function() {
			t({
				path: e,
				data: r,
				status: "ok"
			})
		}, r.onerror = function() {
			t({
				path: e,
				status: "error"
			})
		}, r.src = e
	})
};

function humanFileSize(e) {
	var t = 0 == e ? 0 : Math.floor(Math.log(e) / Math.log(1024));
	return 1 * (e / Math.pow(1024, t)).toFixed(2) + " " + ["B", "kB", "MB", "GB", "TB"][t]
}

function printImageSize(e) {
	var t = .75 * (e.src.length - (e.src.indexOf(",") + 1)) - ("=" === e.src.charAt(e.src.length - 2) ? 2 : "=" === e.src.charAt(e.src.length - 1) ? 1 : 0);
	$("#animatedGifWrapper").append("<p>Image file size: " + humanFileSize(t) + "</p>")
}

function getDownloadFilename(e, t) {
	var r = "-",
		o = "";
	return $.each(url_parameters.p, function(e, t) {
		r += "--" + t + "-opacity-" + 100 * url_parameters.opacity[e]
	}), o = e.length > 1 ? e[0].toString() + "-" + e[e.length - 1].toString() : e[0].toString(), "cira-rammb-slider---" + url_parameters.sat + "---" + url_parameters.sec + r + "---" + o + "." + t
}

function displayAnimatedImage(e, t, r) {
	var o = getDownloadFilename(t, r);
	$("#animatedGifWrapper").append("<p>Suggested file name: " + o + "</p>"), printImageSize(e), $("#animatedGifWrapper").append("<a id='imageDownload_" + t[0] + "' href='" + e.src + "' download='" + o + "'></a>"), $("#imageDownload_" + t[0]).append(e)
}

function gifshotWrapper(e, t, r, o) {
	gifshot.createGIF({
		images: e,
		gifWidth: r,
		gifHeight: o,
		frameDuration: url_parameters.speed / 100,
		progressCallback: function(e) {
			$("#progressbar").progressbar({
				value: 100 * e
			})
		}
	}, function(e) {
		if (!e.error) {
			var r = e.image,
				o = document.createElement("img");
			o.src = r, $("#animatedGifWrapper").empty(), displayAnimatedImage(o, t, "gif")
		}
	})
}

function writeImagery(e) {
	var t = [],
		r = [];
	"currentImage" == e ? -1 != loopingIndex ? r.push(all_tiles[0][3][loopingIndex]) : r.push(all_tiles[0][3][all_tiles[0][3].length - 1]) : r = all_tiles[0][3];
	for (var o = 0; o < all_tiles.length; o++)
		for (var a = 0; a < r.length; a++)
			for (var l = 0; l < tiles_in_view.length; l++) {
				var i = tiles_in_view[l][0],
					s = tiles_in_view[l][1],
					n = tiles_in_view[l][2];
				current_zoom_level > all_tiles[o][0].length - 1 && (i = all_tiles[o][0].length - 1, s = translateTileNumber(s, current_zoom_level, i), n = translateTileNumber(n, current_zoom_level, i));
				var c = server_root + r[a].toString().slice(0, 8) + "/" + url_parameters.sat + "---" + url_parameters.sec + "/" + url_parameters.p[o] + "/" + r[a] + "/" + leadingZeros(i, 2) + "/" + leadingZeros(s, 3) + "_" + leadingZeros(n, 3) + all_tiles[o][2]; - 1 == $.inArray(c, t) && t.push(c)
			}
	$.each(map_lat_lon_tiles, function(e, o) {
		if (1 == map_lat_lon_tiles[e][4])
			for (var a = 0; a < r.length; a++)
				for (var l = 0; l < tiles_in_view.length; l++) {
					var i = tiles_in_view[l][0],
						s = tiles_in_view[l][1],
						n = tiles_in_view[l][2],
						c = map_lat_lon_tiles[e][1] + map_lat_lon_tiles[e][3][0].toString() + "/" + leadingZeros(i, 2) + "/" + leadingZeros(s, 3) + "_" + leadingZeros(n, 3) + map_lat_lon_tiles[e][2]; - 1 == $.inArray(c, t) && t.push(c)
				}
	}), $("#progressbar").progressbar("option", "value", !1), $("#numberOfTiles").text(t.length), Promise.all(t.map(checkImage)).then(function(e) {
		return Promise.all([e, stitchTiles(e)])
	}).then(function(t) {
		var o = $(window).width(),
			a = $(window).height(),
			l = t[1];
		if ("canvas2apng" == e) {
			$("#animatedGifWrapper").append("<canvas id='canvas2apngCanvas' style='display: none;' />");
			var i = document.getElementById("canvas2apngCanvas");
			i.width = o, i.height = a;
			var s = i.getContext("2d"),
				n = new APNGencoder(i);
			n.setRepeat(0), n.setDelay(url_parameters.speed / 10), n.start();
			var c = Object.keys(l).length;
			Object.keys(l).sort().forEach(function(e, t) {
				s.clearRect(0, 0, l[e].width, l[e].height), s.drawImage(l[e], 0, 0), t == c - 1 && n.setDelay(url_parameters.speed / 10 * 3), n.addFrame(l[e].getContext("2d"))
			}), n.finish(), base64Out = bytesToBase64(n.stream().bin);
			var u = document.createElement("img");
			u.src = "data:image/png;base64," + base64Out, u.style.width = i.width, u.style.height = i.height, $("#progressbar").progressbar("option", "value", 100), $("#animatedGifWrapper").empty(), displayAnimatedImage(u, r, "png")
		} else if ("gifshot" == e) {
			var p = [];
			Object.keys(l).sort().forEach(function(e, t) {
				p.push({
					src: l[e].toDataURL()
				})
			}), gifshotWrapper(p, r, o, a)
		} else "currentImage" != e && "allImagesSeparately" != e || ($("#animatedGifWrapper").empty(), Object.keys(l).sort().forEach(function(e, t) {
			var o = document.createElement("img");
			o.src = l[e].toDataURL(), displayAnimatedImage(o, [r[t]], "png")
		}), $("#progressbar").progressbar("option", "value", 100))
	}).catch(function(e) {
		alert("The full image was unable to be created because one or more of its image tiles couldn't be downloaded. Please see the console for more details."), console.log(e)
	})
}
$("#animatedGifDialog").dialog({
	autoOpen: !1,
	show: {
		effect: "blind",
		duration: 1e3
	},
	hide: {
		effect: "blind",
		duration: 1e3
	}
}), $("#progressbar").progressbar({
	value: 0
}), $("#pluginToUse").buttonset(), $("#downloadLoop").button().on("click", function(e) {
	e.preventDefault(), stopLoop(), $("#downloadOptionsDialog").dialog({
		width: .8 * $(window).width(),
		height: .8 * $(window).height()
	}).dialog("open")
}), $("#submitDownloadOptions").button().on("click", function(e) {
	e.preventDefault(), $("#downloadOptionsDialog").dialog("close"), $("#animatedGifWrapper").html("<img src='/images/loading_spinner.gif' alt='Please wait while your browser builds the animated GIF.' title='Please wait while your browser builds the animated GIF' />"), $("#animatedGifDialog").dialog({
		width: .8 * $(window).width(),
		height: .8 * $(window).height(),
		show: {
			effect: "blind",
			duration: 0
		}
	}).dialog("open"), writeImagery($("#pluginToUse :radio:checked").attr("id"))
}), stopLoopShowSpinner(), setFollowVectors(), 1 == url_parameters.follow_feature && followXVector && followYVector && $("#followFeature").prop("checked", !0).checkboxradio("refresh"), 1 == url_parameters.follow_hide && $("#followHideShow").prop("checked", !0).checkboxradio("refresh"), "rock" == url_parameters.motion ? (0 != url_parameters.pause && (pause_loop_rock_rev = 1), $("#radioRock").click()) : "rev" == url_parameters.motion && (0 != url_parameters.pause && (pause_loop_rock_rev = 1), $("#radioRev").click()), 1 == url_parameters.hide_controls && $("#menuHideShow").click(), setArchiveModeState();
